{"version":3,"file":"eth-keyring.cjs.production.min.js","sources":["../src/DefaultInteractionProvider.ts","../src/DefaultKeyring.ts"],"sourcesContent":["import { EthSignRequest, CryptoHDKey, ETHSignature } from '@keystonehq/bc-ur-registry-eth';\nimport { InteractionProvider } from '@keystonehq/base-eth-keyring';\nimport sdk, { SupportedResult, ReadStatus, PlayStatus } from '@keystonehq/sdk';\n\nexport class DefaultInteractionProvider implements InteractionProvider {\n    private static instance;\n    private keystoneSDK = undefined;\n\n    constructor() {\n        if (DefaultInteractionProvider.instance) {\n            return DefaultInteractionProvider.instance;\n        }\n        sdk.bootstrap();\n        this.keystoneSDK = sdk.getSdk();\n        DefaultInteractionProvider.instance = this;\n    }\n\n    public readCryptoHDKey = async () => {\n        const decodedResult = await this.keystoneSDK.read([SupportedResult.UR_CRYPTO_HDKEY], {\n            title: 'Sync Keystone',\n            description: 'Please scan the QR code displayed on your Keystone',\n            renderInitial: {\n                walletMode: 'Web3',\n                link: 'https://keyst.one/defi',\n            },\n            URTypeErrorMessage:\n                'The scanned QR code is not the sync code from the Keystone hardware wallet. Please verify the code and try again ( Keystone firmware V1.3.0 or newer required).',\n        });\n        if (decodedResult.status === ReadStatus.success) {\n            const { result } = decodedResult;\n            const cryptoHDKey = CryptoHDKey.fromCBOR(result.cbor);\n            return cryptoHDKey;\n        } else {\n            throw new Error('Reading canceled');\n        }\n    };\n\n    public requestSignature = async (\n        ethSignRequest: EthSignRequest,\n        requestTitle?: string,\n        requestDescription?: string,\n    ) => {\n        const status = await this.keystoneSDK.play(ethSignRequest.toUR(), {\n            hasNext: true,\n            title: requestTitle,\n            description: requestDescription,\n        });\n        if (status === PlayStatus.canceled) throw new Error('#ktek_error[play-cancel]: play canceled');\n        const result = await this.keystoneSDK.read([SupportedResult.UR_ETH_SIGNATURE], {\n            title: 'Scan Keystone',\n            description: 'Please scan the QR code displayed on your Keystone',\n        });\n        if (result.status === ReadStatus.canceled) {\n            throw new Error('#ktek_error[read-cancel]: read signature canceled');\n        } else {\n            return ETHSignature.fromCBOR(result.result.cbor);\n        }\n    };\n}\n","import { DefaultInteractionProvider } from './DefaultInteractionProvider';\nimport { BaseKeyring, StoredKeyring } from '@keystonehq/base-eth-keyring';\n\nexport class DefaultKeyring extends BaseKeyring {\n    static type = BaseKeyring.type;\n    static getEmptyKeyring(): DefaultKeyring {\n        return new DefaultKeyring({\n            xfp: '',\n            xpub: '',\n            hdPath: '',\n            perPage: 5,\n            page: 0,\n            accounts: [],\n            currentAccount: 0,\n            paths: {},\n        });\n    }\n\n    constructor(opts?: StoredKeyring) {\n        super(opts);\n    }\n\n    getInteraction = () => {\n        return new DefaultInteractionProvider();\n    };\n}\n"],"names":["DefaultInteractionProvider","constructor","undefined","async","decodedResult","this","keystoneSDK","read","SupportedResult","UR_CRYPTO_HDKEY","title","description","renderInitial","walletMode","link","URTypeErrorMessage","status","ReadStatus","success","result","CryptoHDKey","fromCBOR","cbor","Error","ethSignRequest","requestTitle","requestDescription","play","toUR","hasNext","PlayStatus","canceled","UR_ETH_SIGNATURE","ETHSignature","instance","sdk","bootstrap","getSdk","DefaultKeyring","BaseKeyring","opts","xfp","xpub","hdPath","perPage","page","accounts","currentAccount","paths","type"],"mappings":"0PAIaA,EAITC,uCAFsBC,uBAWGC,gBACfC,QAAsBC,KAAKC,YAAYC,KAAK,CAACC,kBAAgBC,iBAAkB,CACjFC,MAAO,gBACPC,YAAa,qDACbC,cAAe,CACXC,WAAY,OACZC,KAAM,0BAEVC,mBACI,uKAEJX,EAAcY,SAAWC,aAAWC,QAAS,OACvCC,OAAEA,GAAWf,SACCgB,cAAYC,SAASF,EAAOG,YAG1C,IAAIC,MAAM,2CAIEpB,MACtBqB,EACAC,EACAC,cAEqBrB,KAAKC,YAAYqB,KAAKH,EAAeI,OAAQ,CAC9DC,SAAS,EACTnB,MAAOe,EACPd,YAAae,MAEFI,aAAWC,SAAU,MAAM,IAAIR,MAAM,iDAC9CJ,QAAed,KAAKC,YAAYC,KAAK,CAACC,kBAAgBwB,kBAAmB,CAC3EtB,MAAO,gBACPC,YAAa,0DAEbQ,EAAOH,SAAWC,aAAWc,eACvB,IAAIR,MAAM,4DAETU,eAAaZ,SAASF,EAAOA,OAAOG,OA9C3CtB,EAA2BkC,gBACpBlC,EAA2BkC,SAEtCC,EAAIC,iBACC9B,YAAc6B,EAAIE,SACvBrC,EAA2BkC,SAAW7B,YCXjCiC,UAAuBC,cAehCtC,YAAYuC,SACFA,uBAGO,IACN,IAAIxC,kCAjBJ,IAAIsC,EAAe,CACtBG,IAAK,GACLC,KAAM,GACNC,OAAQ,GACRC,QAAS,EACTC,KAAM,EACNC,SAAU,GACVC,eAAgB,EAChBC,MAAO,MAVRV,OAAOC,cAAYU"}