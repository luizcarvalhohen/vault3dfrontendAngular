{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{19:function(r,e){},\"8Qrm\":function(r,e,t){\"use strict\";var n=this&&this.__createBinding||(Object.create?function(r,e,t,n){void 0===n&&(n=t),Object.defineProperty(r,n,{enumerable:!0,get:function(){return e[t]}})}:function(r,e,t,n){void 0===n&&(n=t),r[n]=e[t]}),o=this&&this.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,\"default\",{enumerable:!0,value:e})}:function(r,e){r.default=e}),i=this&&this.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(null!=r)for(var t in r)\"default\"!==t&&Object.prototype.hasOwnProperty.call(r,t)&&n(e,r,t);return o(e,r),e};Object.defineProperty(e,\"__esModule\",{value:!0}),e.recoverTypedSignature_v4=e.recoverTypedSignature=e.signTypedData_v4=e.signTypedData=e.recoverTypedMessage=e.signTypedMessage=e.getEncryptionPublicKey=e.decryptSafely=e.decrypt=e.encryptSafely=e.encrypt=e.recoverTypedSignatureLegacy=e.signTypedDataLegacy=e.typedSignatureHash=e.extractPublicKey=e.recoverPersonalSignature=e.personalSign=e.normalize=e.concatSig=e.TypedDataUtils=e.TYPED_MESSAGE_SCHEMA=void 0;const a=i(t(\"/JJz\")),s=i(t(\"JQL/\")),f=i(t(\"CEl9\")),c=i(t(\"Qnqb\")),h={type:\"object\",properties:{types:{type:\"object\",additionalProperties:{type:\"array\",items:{type:\"object\",properties:{name:{type:\"string\"},type:{type:\"string\"}},required:[\"name\",\"type\"]}}},primaryType:{type:\"string\"},domain:{type:\"object\"},message:{type:\"object\"}},required:[\"types\",\"primaryType\",\"domain\",\"message\"]};e.TYPED_MESSAGE_SCHEMA=h;const u={encodeData(r,e,t,n=!0){const o=[\"bytes32\"],i=[this.hashType(r,t)];if(n){const f=(r,e,o)=>{if(void 0!==t[e])return[\"bytes32\",null==o?\"0x0000000000000000000000000000000000000000000000000000000000000000\":a.keccak(this.encodeData(e,o,t,n))];if(void 0===o)throw new Error(`missing value for field ${r} of type ${e}`);if(\"bytes\"===e)return[\"bytes32\",a.keccak(o)];if(\"string\"===e)return\"string\"==typeof o&&(o=Buffer.from(o,\"utf8\")),[\"bytes32\",a.keccak(o)];if(e.lastIndexOf(\"]\")===e.length-1){const t=e.slice(0,e.lastIndexOf(\"[\")),n=o.map(e=>f(r,t,e));return[\"bytes32\",a.keccak(s.rawEncode(n.map(([r])=>r),n.map(([,r])=>r)))]}return[e,o]};for(const n of t[r]){const[r,t]=f(n.name,n.type,e[n.name]);o.push(r),i.push(t)}}else for(const s of t[r]){let r=e[s.name];if(void 0!==r)if(\"bytes\"===s.type)o.push(\"bytes32\"),r=a.keccak(r),i.push(r);else if(\"string\"===s.type)o.push(\"bytes32\"),\"string\"==typeof r&&(r=Buffer.from(r,\"utf8\")),r=a.keccak(r),i.push(r);else if(void 0!==t[s.type])o.push(\"bytes32\"),r=a.keccak(this.encodeData(s.type,r,t,n)),i.push(r);else{if(s.type.lastIndexOf(\"]\")===s.type.length-1)throw new Error(\"Arrays are unimplemented in encodeData; use V4 extension\");o.push(s.type),i.push(r)}}return s.rawEncode(o,i)},encodeType(r,e){let t=\"\",n=this.findTypeDependencies(r,e).filter(e=>e!==r);n=[r].concat(n.sort());for(const o of n){if(!e[o])throw new Error(\"No type definition specified: \"+o);t+=`${o}(${e[o].map(({name:r,type:e})=>`${e} ${r}`).join(\",\")})`}return t},findTypeDependencies(r,e,t=[]){if([r]=r.match(/^\\w*/u),t.includes(r)||void 0===e[r])return t;t.push(r);for(const n of e[r])for(const r of this.findTypeDependencies(n.type,e,t))!t.includes(r)&&t.push(r);return t},hashStruct(r,e,t,n=!0){return a.keccak(this.encodeData(r,e,t,n))},hashType(r,e){return a.keccak(this.encodeType(r,e))},sanitizeData(r){const e={};for(const t in h.properties)r[t]&&(e[t]=r[t]);return\"types\"in e&&(e.types=Object.assign({EIP712Domain:[]},e.types)),e},sign(r,e=!0){const t=this.sanitizeData(r),n=[Buffer.from(\"1901\",\"hex\")];return n.push(this.hashStruct(\"EIP712Domain\",t.domain,t.types,e)),\"EIP712Domain\"!==t.primaryType&&n.push(this.hashStruct(t.primaryType,t.message,t.types,e)),a.keccak(Buffer.concat(n))}};function y(r,e,t){const n=a.fromSigned(e),o=a.fromSigned(t),i=a.bufferToInt(r),s=E(a.toUnsigned(n).toString(\"hex\"),64),f=E(a.toUnsigned(o).toString(\"hex\"),64),c=a.stripHexPrefix(a.intToHex(i));return a.addHexPrefix(s.concat(f,c)).toString(\"hex\")}function p(r,e){const t=x(e.data),n=a.ecsign(t,r);return a.bufferToHex(y(n.v,n.r,n.s))}function l(r){const e=m(x(r.data),r.sig),t=a.publicToAddress(e);return a.bufferToHex(t)}function d(r,e,t){switch(t){case\"x25519-xsalsa20-poly1305\":{if(\"string\"!=typeof e.data)throw new Error('Cannot detect secret message, message params should be of the form {data: \"secret message\"} ');const t=f.box.keyPair();let o;try{o=c.decodeBase64(r)}catch(n){throw new Error(\"Bad public key\")}const i=c.decodeUTF8(e.data),a=f.randomBytes(f.box.nonceLength),s=f.box(i,a,o,t.secretKey);return{version:\"x25519-xsalsa20-poly1305\",nonce:c.encodeBase64(a),ephemPublicKey:c.encodeBase64(t.publicKey),ciphertext:c.encodeBase64(s)}}default:throw new Error(\"Encryption type/version not supported\")}}function g(r,e){switch(r.version){case\"x25519-xsalsa20-poly1305\":{const n=S(e),o=f.box.keyPair.fromSecretKey(n).secretKey,i=c.decodeBase64(r.nonce),a=c.decodeBase64(r.ciphertext),s=c.decodeBase64(r.ephemPublicKey),h=f.box.open(a,i,s,o);let u;try{u=c.encodeUTF8(h)}catch(t){throw new Error(\"Decryption failed.\")}if(u)return u;throw new Error(\"Decryption failed.\")}default:throw new Error(\"Encryption type/version not supported.\")}}function b(r,e){const t=u.sign(e.data,!1),n=a.ecsign(t,r);return a.bufferToHex(y(n.v,n.r,n.s))}function w(r,e){const t=u.sign(e.data),n=a.ecsign(t,r);return a.bufferToHex(y(n.v,n.r,n.s))}function v(r){const e=m(u.sign(r.data,!1),r.sig),t=a.publicToAddress(e);return a.bufferToHex(t)}function A(r){const e=m(u.sign(r.data),r.sig),t=a.publicToAddress(e);return a.bufferToHex(t)}function x(r){const e=new Error(\"Expect argument to be non-empty array\");if(\"object\"!=typeof r||!(\"length\"in r)||!r.length)throw e;const t=r.map(function(r){return\"bytes\"===r.type?a.toBuffer(r.value):r.value}),n=r.map(function(r){return r.type}),o=r.map(function(r){if(!r.name)throw e;return`${r.type} ${r.name}`});return s.soliditySHA3([\"bytes32\",\"bytes32\"],[s.soliditySHA3(new Array(r.length).fill(\"string\"),o),s.soliditySHA3(n,t)])}function m(r,e){const t=a.toBuffer(e),n=a.fromRpcSig(t);return a.ecrecover(r,n.v,n.r,n.s)}function _(r){const e=a.toBuffer(r.data);return m(a.hashPersonalMessage(e),r.sig)}function E(r,e){let t=\"\"+r;for(;t.length<e;)t=\"0\"+t;return t}function S(r){const e=Buffer.from(r,\"hex\").toString(\"base64\");return c.decodeBase64(e)}e.TypedDataUtils=u,e.concatSig=y,e.normalize=function(r){if(r){if(\"number\"==typeof r){const e=a.toBuffer(r);r=a.bufferToHex(e)}if(\"string\"!=typeof r){let e=\"eth-sig-util.normalize() requires hex string or integer input.\";throw e+=` received ${typeof r}: ${r}`,new Error(e)}return a.addHexPrefix(r.toLowerCase())}},e.personalSign=function(r,e){const t=a.toBuffer(e.data),n=a.hashPersonalMessage(t),o=a.ecsign(n,r);return a.bufferToHex(y(o.v,o.r,o.s))},e.recoverPersonalSignature=function(r){const e=_(r),t=a.publicToAddress(e);return a.bufferToHex(t)},e.extractPublicKey=function(r){return\"0x\"+_(r).toString(\"hex\")},e.typedSignatureHash=function(r){const e=x(r);return a.bufferToHex(e)},e.signTypedDataLegacy=p,e.recoverTypedSignatureLegacy=l,e.encrypt=d,e.encryptSafely=function(r,e,t){const{data:n}=e;if(!n)throw new Error(\"Cannot encrypt empty msg.data\");if(\"object\"==typeof n&&\"toJSON\"in n)throw new Error(\"Cannot encrypt with toJSON property.  Please remove toJSON property\");const o={data:n,padding:\"\"},i=Buffer.byteLength(JSON.stringify(o),\"utf-8\")%2048;let a=0;return i>0&&(a=2048-i-16),o.padding=\"0\".repeat(a),d(r,{data:JSON.stringify(o)},t)},e.decrypt=g,e.decryptSafely=function(r,e){return JSON.parse(g(r,e)).data},e.getEncryptionPublicKey=function(r){const e=S(r),t=f.box.keyPair.fromSecretKey(e).publicKey;return c.encodeBase64(t)},e.signTypedMessage=function(r,e,t=\"V4\"){switch(t){case\"V1\":return p(r,e);case\"V3\":return b(r,e);case\"V4\":default:return w(r,e)}},e.recoverTypedMessage=function(r,e=\"V4\"){switch(e){case\"V1\":return l(r);case\"V3\":return v(r);case\"V4\":default:return A(r)}},e.signTypedData=b,e.signTypedData_v4=w,e.recoverTypedSignature=v,e.recoverTypedSignature_v4=A},CEl9:function(r,e,t){!function(r){\"use strict\";var e=function(r){var e,t=new Float64Array(16);if(r)for(e=0;e<r.length;e++)t[e]=r[e];return t},n=function(){throw new Error(\"no PRNG\")},o=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var a=e(),s=e([1]),f=e([56129,1]),c=e([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),h=e([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),u=e([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),y=e([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),p=e([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function l(r,e,t,n){r[e]=t>>24&255,r[e+1]=t>>16&255,r[e+2]=t>>8&255,r[e+3]=255&t,r[e+4]=n>>24&255,r[e+5]=n>>16&255,r[e+6]=n>>8&255,r[e+7]=255&n}function d(r,e,t,n,o){var i,a=0;for(i=0;i<o;i++)a|=r[e+i]^t[n+i];return(1&a-1>>>8)-1}function g(r,e,t,n){return d(r,e,t,n,16)}function b(r,e,t,n){return d(r,e,t,n,32)}function w(r,e,t,n){!function(r,e,t,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,s=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,f=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,c=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,h=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,u=255&e[0]|(255&e[1])<<8|(255&e[2])<<16|(255&e[3])<<24,y=255&e[4]|(255&e[5])<<8|(255&e[6])<<16|(255&e[7])<<24,p=255&e[8]|(255&e[9])<<8|(255&e[10])<<16|(255&e[11])<<24,l=255&e[12]|(255&e[13])<<8|(255&e[14])<<16|(255&e[15])<<24,d=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,g=255&t[16]|(255&t[17])<<8|(255&t[18])<<16|(255&t[19])<<24,b=255&t[20]|(255&t[21])<<8|(255&t[22])<<16|(255&t[23])<<24,w=255&t[24]|(255&t[25])<<8|(255&t[26])<<16|(255&t[27])<<24,v=255&t[28]|(255&t[29])<<8|(255&t[30])<<16|(255&t[31])<<24,A=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,x=i,m=a,_=s,E=f,S=c,U=h,T=u,B=y,M=p,k=l,P=d,K=g,L=b,D=w,O=v,z=A,C=0;C<20;C+=2)x^=(o=(L^=(o=(M^=(o=(S^=(o=x+L|0)<<7|o>>>25)+x|0)<<9|o>>>23)+S|0)<<13|o>>>19)+M|0)<<18|o>>>14,U^=(o=(m^=(o=(D^=(o=(k^=(o=U+m|0)<<7|o>>>25)+U|0)<<9|o>>>23)+k|0)<<13|o>>>19)+D|0)<<18|o>>>14,P^=(o=(T^=(o=(_^=(o=(O^=(o=P+T|0)<<7|o>>>25)+P|0)<<9|o>>>23)+O|0)<<13|o>>>19)+_|0)<<18|o>>>14,z^=(o=(K^=(o=(B^=(o=(E^=(o=z+K|0)<<7|o>>>25)+z|0)<<9|o>>>23)+E|0)<<13|o>>>19)+B|0)<<18|o>>>14,x^=(o=(E^=(o=(_^=(o=(m^=(o=x+E|0)<<7|o>>>25)+x|0)<<9|o>>>23)+m|0)<<13|o>>>19)+_|0)<<18|o>>>14,U^=(o=(S^=(o=(B^=(o=(T^=(o=U+S|0)<<7|o>>>25)+U|0)<<9|o>>>23)+T|0)<<13|o>>>19)+B|0)<<18|o>>>14,P^=(o=(k^=(o=(M^=(o=(K^=(o=P+k|0)<<7|o>>>25)+P|0)<<9|o>>>23)+K|0)<<13|o>>>19)+M|0)<<18|o>>>14,z^=(o=(O^=(o=(D^=(o=(L^=(o=z+O|0)<<7|o>>>25)+z|0)<<9|o>>>23)+L|0)<<13|o>>>19)+D|0)<<18|o>>>14;m=m+a|0,_=_+s|0,E=E+f|0,S=S+c|0,U=U+h|0,T=T+u|0,B=B+y|0,M=M+p|0,k=k+l|0,P=P+d|0,K=K+g|0,L=L+b|0,D=D+w|0,O=O+v|0,z=z+A|0,r[0]=(x=x+i|0)>>>0&255,r[1]=x>>>8&255,r[2]=x>>>16&255,r[3]=x>>>24&255,r[4]=m>>>0&255,r[5]=m>>>8&255,r[6]=m>>>16&255,r[7]=m>>>24&255,r[8]=_>>>0&255,r[9]=_>>>8&255,r[10]=_>>>16&255,r[11]=_>>>24&255,r[12]=E>>>0&255,r[13]=E>>>8&255,r[14]=E>>>16&255,r[15]=E>>>24&255,r[16]=S>>>0&255,r[17]=S>>>8&255,r[18]=S>>>16&255,r[19]=S>>>24&255,r[20]=U>>>0&255,r[21]=U>>>8&255,r[22]=U>>>16&255,r[23]=U>>>24&255,r[24]=T>>>0&255,r[25]=T>>>8&255,r[26]=T>>>16&255,r[27]=T>>>24&255,r[28]=B>>>0&255,r[29]=B>>>8&255,r[30]=B>>>16&255,r[31]=B>>>24&255,r[32]=M>>>0&255,r[33]=M>>>8&255,r[34]=M>>>16&255,r[35]=M>>>24&255,r[36]=k>>>0&255,r[37]=k>>>8&255,r[38]=k>>>16&255,r[39]=k>>>24&255,r[40]=P>>>0&255,r[41]=P>>>8&255,r[42]=P>>>16&255,r[43]=P>>>24&255,r[44]=K>>>0&255,r[45]=K>>>8&255,r[46]=K>>>16&255,r[47]=K>>>24&255,r[48]=L>>>0&255,r[49]=L>>>8&255,r[50]=L>>>16&255,r[51]=L>>>24&255,r[52]=D>>>0&255,r[53]=D>>>8&255,r[54]=D>>>16&255,r[55]=D>>>24&255,r[56]=O>>>0&255,r[57]=O>>>8&255,r[58]=O>>>16&255,r[59]=O>>>24&255,r[60]=z>>>0&255,r[61]=z>>>8&255,r[62]=z>>>16&255,r[63]=z>>>24&255}(r,e,t,n)}function v(r,e,t,n){!function(r,e,t,n){for(var o,i=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,s=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,f=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,c=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,h=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,u=255&e[0]|(255&e[1])<<8|(255&e[2])<<16|(255&e[3])<<24,y=255&e[4]|(255&e[5])<<8|(255&e[6])<<16|(255&e[7])<<24,p=255&e[8]|(255&e[9])<<8|(255&e[10])<<16|(255&e[11])<<24,l=255&e[12]|(255&e[13])<<8|(255&e[14])<<16|(255&e[15])<<24,d=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,g=255&t[16]|(255&t[17])<<8|(255&t[18])<<16|(255&t[19])<<24,b=255&t[20]|(255&t[21])<<8|(255&t[22])<<16|(255&t[23])<<24,w=255&t[24]|(255&t[25])<<8|(255&t[26])<<16|(255&t[27])<<24,v=255&t[28]|(255&t[29])<<8|(255&t[30])<<16|(255&t[31])<<24,A=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,x=0;x<20;x+=2)i^=(o=(b^=(o=(p^=(o=(c^=(o=i+b|0)<<7|o>>>25)+i|0)<<9|o>>>23)+c|0)<<13|o>>>19)+p|0)<<18|o>>>14,h^=(o=(a^=(o=(w^=(o=(l^=(o=h+a|0)<<7|o>>>25)+h|0)<<9|o>>>23)+l|0)<<13|o>>>19)+w|0)<<18|o>>>14,d^=(o=(u^=(o=(s^=(o=(v^=(o=d+u|0)<<7|o>>>25)+d|0)<<9|o>>>23)+v|0)<<13|o>>>19)+s|0)<<18|o>>>14,A^=(o=(g^=(o=(y^=(o=(f^=(o=A+g|0)<<7|o>>>25)+A|0)<<9|o>>>23)+f|0)<<13|o>>>19)+y|0)<<18|o>>>14,i^=(o=(f^=(o=(s^=(o=(a^=(o=i+f|0)<<7|o>>>25)+i|0)<<9|o>>>23)+a|0)<<13|o>>>19)+s|0)<<18|o>>>14,h^=(o=(c^=(o=(y^=(o=(u^=(o=h+c|0)<<7|o>>>25)+h|0)<<9|o>>>23)+u|0)<<13|o>>>19)+y|0)<<18|o>>>14,d^=(o=(l^=(o=(p^=(o=(g^=(o=d+l|0)<<7|o>>>25)+d|0)<<9|o>>>23)+g|0)<<13|o>>>19)+p|0)<<18|o>>>14,A^=(o=(v^=(o=(w^=(o=(b^=(o=A+v|0)<<7|o>>>25)+A|0)<<9|o>>>23)+b|0)<<13|o>>>19)+w|0)<<18|o>>>14;r[0]=i>>>0&255,r[1]=i>>>8&255,r[2]=i>>>16&255,r[3]=i>>>24&255,r[4]=h>>>0&255,r[5]=h>>>8&255,r[6]=h>>>16&255,r[7]=h>>>24&255,r[8]=d>>>0&255,r[9]=d>>>8&255,r[10]=d>>>16&255,r[11]=d>>>24&255,r[12]=A>>>0&255,r[13]=A>>>8&255,r[14]=A>>>16&255,r[15]=A>>>24&255,r[16]=u>>>0&255,r[17]=u>>>8&255,r[18]=u>>>16&255,r[19]=u>>>24&255,r[20]=y>>>0&255,r[21]=y>>>8&255,r[22]=y>>>16&255,r[23]=y>>>24&255,r[24]=p>>>0&255,r[25]=p>>>8&255,r[26]=p>>>16&255,r[27]=p>>>24&255,r[28]=l>>>0&255,r[29]=l>>>8&255,r[30]=l>>>16&255,r[31]=l>>>24&255}(r,e,t,n)}var A=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function x(r,e,t,n,o,i,a){var s,f,c=new Uint8Array(16),h=new Uint8Array(64);for(f=0;f<16;f++)c[f]=0;for(f=0;f<8;f++)c[f]=i[f];for(;o>=64;){for(w(h,c,a,A),f=0;f<64;f++)r[e+f]=t[n+f]^h[f];for(s=1,f=8;f<16;f++)c[f]=255&(s=s+(255&c[f])|0),s>>>=8;o-=64,e+=64,n+=64}if(o>0)for(w(h,c,a,A),f=0;f<o;f++)r[e+f]=t[n+f]^h[f];return 0}function m(r,e,t,n,o){var i,a,s=new Uint8Array(16),f=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=n[a];for(;t>=64;){for(w(f,s,o,A),a=0;a<64;a++)r[e+a]=f[a];for(i=1,a=8;a<16;a++)s[a]=255&(i=i+(255&s[a])|0),i>>>=8;t-=64,e+=64}if(t>0)for(w(f,s,o,A),a=0;a<t;a++)r[e+a]=f[a];return 0}function _(r,e,t,n,o){var i=new Uint8Array(32);v(i,n,o,A);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=n[s+16];return m(r,e,t,a,i)}function E(r,e,t,n,o,i,a){var s=new Uint8Array(32);v(s,i,a,A);for(var f=new Uint8Array(8),c=0;c<8;c++)f[c]=i[c+16];return x(r,e,t,n,o,f,s)}var S=function(r){var e,t,n,o,i,a,s,f;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,this.r[0]=8191&(e=255&r[0]|(255&r[1])<<8),this.r[1]=8191&(e>>>13|(t=255&r[2]|(255&r[3])<<8)<<3),this.r[2]=7939&(t>>>10|(n=255&r[4]|(255&r[5])<<8)<<6),this.r[3]=8191&(n>>>7|(o=255&r[6]|(255&r[7])<<8)<<9),this.r[4]=255&(o>>>4|(i=255&r[8]|(255&r[9])<<8)<<12),this.r[5]=i>>>1&8190,this.r[6]=8191&(i>>>14|(a=255&r[10]|(255&r[11])<<8)<<2),this.r[7]=8065&(a>>>11|(s=255&r[12]|(255&r[13])<<8)<<5),this.r[8]=8191&(s>>>8|(f=255&r[14]|(255&r[15])<<8)<<8),this.r[9]=f>>>5&127,this.pad[0]=255&r[16]|(255&r[17])<<8,this.pad[1]=255&r[18]|(255&r[19])<<8,this.pad[2]=255&r[20]|(255&r[21])<<8,this.pad[3]=255&r[22]|(255&r[23])<<8,this.pad[4]=255&r[24]|(255&r[25])<<8,this.pad[5]=255&r[26]|(255&r[27])<<8,this.pad[6]=255&r[28]|(255&r[29])<<8,this.pad[7]=255&r[30]|(255&r[31])<<8};function U(r,e,t,n,o,i){var a=new S(i);return a.update(t,n,o),a.finish(r,e),0}function T(r,e,t,n,o,i){var a=new Uint8Array(16);return U(a,0,t,n,o,i),g(r,e,a,0)}function B(r,e,t,n,o){var i;if(t<32)return-1;for(E(r,0,e,0,t,n,o),U(r,16,r,32,t-32,r),i=0;i<16;i++)r[i]=0;return 0}function M(r,e,t,n,o){var i,a=new Uint8Array(32);if(t<32)return-1;if(_(a,0,32,n,o),0!==T(e,16,e,32,t-32,a))return-1;for(E(r,0,e,0,t,n,o),i=0;i<32;i++)r[i]=0;return 0}function k(r,e){var t;for(t=0;t<16;t++)r[t]=0|e[t]}function P(r){var e,t,n=1;for(e=0;e<16;e++)t=r[e]+n+65535,n=Math.floor(t/65536),r[e]=t-65536*n;r[0]+=n-1+37*(n-1)}function K(r,e,t){for(var n,o=~(t-1),i=0;i<16;i++)r[i]^=n=o&(r[i]^e[i]),e[i]^=n}function L(r,t){var n,o,i,a=e(),s=e();for(n=0;n<16;n++)s[n]=t[n];for(P(s),P(s),P(s),o=0;o<2;o++){for(a[0]=s[0]-65517,n=1;n<15;n++)a[n]=s[n]-65535-(a[n-1]>>16&1),a[n-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),i=a[15]>>16&1,a[14]&=65535,K(s,a,1-i)}for(n=0;n<16;n++)r[2*n]=255&s[n],r[2*n+1]=s[n]>>8}function D(r,e){var t=new Uint8Array(32),n=new Uint8Array(32);return L(t,r),L(n,e),b(t,0,n,0)}function O(r){var e=new Uint8Array(32);return L(e,r),1&e[0]}function z(r,e){var t;for(t=0;t<16;t++)r[t]=e[2*t]+(e[2*t+1]<<8);r[15]&=32767}function C(r,e,t){for(var n=0;n<16;n++)r[n]=e[n]+t[n]}function Y(r,e,t){for(var n=0;n<16;n++)r[n]=e[n]-t[n]}function H(r,e,t){var n,o,i=0,a=0,s=0,f=0,c=0,h=0,u=0,y=0,p=0,l=0,d=0,g=0,b=0,w=0,v=0,A=0,x=0,m=0,_=0,E=0,S=0,U=0,T=0,B=0,M=0,k=0,P=0,K=0,L=0,D=0,O=0,z=t[0],C=t[1],Y=t[2],H=t[3],j=t[4],R=t[5],N=t[6],I=t[7],J=t[8],V=t[9],$=t[10],F=t[11],Z=t[12],G=t[13],q=t[14],Q=t[15];i+=(n=e[0])*z,a+=n*C,s+=n*Y,f+=n*H,c+=n*j,h+=n*R,u+=n*N,y+=n*I,p+=n*J,l+=n*V,d+=n*$,g+=n*F,b+=n*Z,w+=n*G,v+=n*q,A+=n*Q,a+=(n=e[1])*z,s+=n*C,f+=n*Y,c+=n*H,h+=n*j,u+=n*R,y+=n*N,p+=n*I,l+=n*J,d+=n*V,g+=n*$,b+=n*F,w+=n*Z,v+=n*G,A+=n*q,x+=n*Q,s+=(n=e[2])*z,f+=n*C,c+=n*Y,h+=n*H,u+=n*j,y+=n*R,p+=n*N,l+=n*I,d+=n*J,g+=n*V,b+=n*$,w+=n*F,v+=n*Z,A+=n*G,x+=n*q,m+=n*Q,f+=(n=e[3])*z,c+=n*C,h+=n*Y,u+=n*H,y+=n*j,p+=n*R,l+=n*N,d+=n*I,g+=n*J,b+=n*V,w+=n*$,v+=n*F,A+=n*Z,x+=n*G,m+=n*q,_+=n*Q,c+=(n=e[4])*z,h+=n*C,u+=n*Y,y+=n*H,p+=n*j,l+=n*R,d+=n*N,g+=n*I,b+=n*J,w+=n*V,v+=n*$,A+=n*F,x+=n*Z,m+=n*G,_+=n*q,E+=n*Q,h+=(n=e[5])*z,u+=n*C,y+=n*Y,p+=n*H,l+=n*j,d+=n*R,g+=n*N,b+=n*I,w+=n*J,v+=n*V,A+=n*$,x+=n*F,m+=n*Z,_+=n*G,E+=n*q,S+=n*Q,u+=(n=e[6])*z,y+=n*C,p+=n*Y,l+=n*H,d+=n*j,g+=n*R,b+=n*N,w+=n*I,v+=n*J,A+=n*V,x+=n*$,m+=n*F,_+=n*Z,E+=n*G,S+=n*q,U+=n*Q,y+=(n=e[7])*z,p+=n*C,l+=n*Y,d+=n*H,g+=n*j,b+=n*R,w+=n*N,v+=n*I,A+=n*J,x+=n*V,m+=n*$,_+=n*F,E+=n*Z,S+=n*G,U+=n*q,T+=n*Q,p+=(n=e[8])*z,l+=n*C,d+=n*Y,g+=n*H,b+=n*j,w+=n*R,v+=n*N,A+=n*I,x+=n*J,m+=n*V,_+=n*$,E+=n*F,S+=n*Z,U+=n*G,T+=n*q,B+=n*Q,l+=(n=e[9])*z,d+=n*C,g+=n*Y,b+=n*H,w+=n*j,v+=n*R,A+=n*N,x+=n*I,m+=n*J,_+=n*V,E+=n*$,S+=n*F,U+=n*Z,T+=n*G,B+=n*q,M+=n*Q,d+=(n=e[10])*z,g+=n*C,b+=n*Y,w+=n*H,v+=n*j,A+=n*R,x+=n*N,m+=n*I,_+=n*J,E+=n*V,S+=n*$,U+=n*F,T+=n*Z,B+=n*G,M+=n*q,k+=n*Q,g+=(n=e[11])*z,b+=n*C,w+=n*Y,v+=n*H,A+=n*j,x+=n*R,m+=n*N,_+=n*I,E+=n*J,S+=n*V,U+=n*$,T+=n*F,B+=n*Z,M+=n*G,k+=n*q,P+=n*Q,b+=(n=e[12])*z,w+=n*C,v+=n*Y,A+=n*H,x+=n*j,m+=n*R,_+=n*N,E+=n*I,S+=n*J,U+=n*V,T+=n*$,B+=n*F,M+=n*Z,k+=n*G,P+=n*q,K+=n*Q,w+=(n=e[13])*z,v+=n*C,A+=n*Y,x+=n*H,m+=n*j,_+=n*R,E+=n*N,S+=n*I,U+=n*J,T+=n*V,B+=n*$,M+=n*F,k+=n*Z,P+=n*G,K+=n*q,L+=n*Q,v+=(n=e[14])*z,A+=n*C,x+=n*Y,m+=n*H,_+=n*j,E+=n*R,S+=n*N,U+=n*I,T+=n*J,B+=n*V,M+=n*$,k+=n*F,P+=n*Z,K+=n*G,L+=n*q,D+=n*Q,A+=(n=e[15])*z,a+=38*(m+=n*Y),s+=38*(_+=n*H),f+=38*(E+=n*j),c+=38*(S+=n*R),h+=38*(U+=n*N),u+=38*(T+=n*I),y+=38*(B+=n*J),p+=38*(M+=n*V),l+=38*(k+=n*$),d+=38*(P+=n*F),g+=38*(K+=n*Z),b+=38*(L+=n*G),w+=38*(D+=n*q),v+=38*(O+=n*Q),i=(n=(i+=38*(x+=n*C))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),A=(n=A+o+65535)-65536*(o=Math.floor(n/65536)),i=(n=(i+=o-1+37*(o-1))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),a=(n=a+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),A=(n=A+o+65535)-65536*(o=Math.floor(n/65536)),r[0]=i+=o-1+37*(o-1),r[1]=a,r[2]=s,r[3]=f,r[4]=c,r[5]=h,r[6]=u,r[7]=y,r[8]=p,r[9]=l,r[10]=d,r[11]=g,r[12]=b,r[13]=w,r[14]=v,r[15]=A}function j(r,e){H(r,e,e)}function R(r,t){var n,o=e();for(n=0;n<16;n++)o[n]=t[n];for(n=253;n>=0;n--)j(o,o),2!==n&&4!==n&&H(o,o,t);for(n=0;n<16;n++)r[n]=o[n]}function N(r,t){var n,o=e();for(n=0;n<16;n++)o[n]=t[n];for(n=250;n>=0;n--)j(o,o),1!==n&&H(o,o,t);for(n=0;n<16;n++)r[n]=o[n]}function I(r,t,n){var o,i,a=new Uint8Array(32),s=new Float64Array(80),c=e(),h=e(),u=e(),y=e(),p=e(),l=e();for(i=0;i<31;i++)a[i]=t[i];for(a[31]=127&t[31]|64,a[0]&=248,z(s,n),i=0;i<16;i++)h[i]=s[i],y[i]=c[i]=u[i]=0;for(c[0]=y[0]=1,i=254;i>=0;--i)K(c,h,o=a[i>>>3]>>>(7&i)&1),K(u,y,o),C(p,c,u),Y(c,c,u),C(u,h,y),Y(h,h,y),j(y,p),j(l,c),H(c,u,c),H(u,h,p),C(p,c,u),Y(c,c,u),j(h,c),Y(u,y,l),H(c,u,f),C(c,c,y),H(u,u,c),H(c,y,l),H(y,h,s),j(h,p),K(c,h,o),K(u,y,o);for(i=0;i<16;i++)s[i+16]=c[i],s[i+32]=u[i],s[i+48]=h[i],s[i+64]=y[i];var d=s.subarray(32),g=s.subarray(16);return R(d,d),H(g,g,d),L(r,g),0}function J(r,e){return I(r,e,i)}function V(r,e){return n(e,32),J(r,e)}function $(r,e,t){var n=new Uint8Array(32);return I(n,t,e),v(r,o,n,A)}S.prototype.blocks=function(r,e,t){for(var n,o,i,a,s,f,c,h,u,y,p,l,d,g,b,w,v,A,x,m=this.fin?0:2048,_=this.h[0],E=this.h[1],S=this.h[2],U=this.h[3],T=this.h[4],B=this.h[5],M=this.h[6],k=this.h[7],P=this.h[8],K=this.h[9],L=this.r[0],D=this.r[1],O=this.r[2],z=this.r[3],C=this.r[4],Y=this.r[5],H=this.r[6],j=this.r[7],R=this.r[8],N=this.r[9];t>=16;)y=u=0,y+=(_+=8191&(n=255&r[e+0]|(255&r[e+1])<<8))*L,y+=(E+=8191&(n>>>13|(o=255&r[e+2]|(255&r[e+3])<<8)<<3))*(5*N),y+=(S+=8191&(o>>>10|(i=255&r[e+4]|(255&r[e+5])<<8)<<6))*(5*R),y+=(U+=8191&(i>>>7|(a=255&r[e+6]|(255&r[e+7])<<8)<<9))*(5*j),u=(y+=(T+=8191&(a>>>4|(s=255&r[e+8]|(255&r[e+9])<<8)<<12))*(5*H))>>>13,y&=8191,y+=(B+=s>>>1&8191)*(5*Y),y+=(M+=8191&(s>>>14|(f=255&r[e+10]|(255&r[e+11])<<8)<<2))*(5*C),y+=(k+=8191&(f>>>11|(c=255&r[e+12]|(255&r[e+13])<<8)<<5))*(5*z),y+=(P+=8191&(c>>>8|(h=255&r[e+14]|(255&r[e+15])<<8)<<8))*(5*O),p=u+=(y+=(K+=h>>>5|m)*(5*D))>>>13,p+=_*D,p+=E*L,p+=S*(5*N),p+=U*(5*R),u=(p+=T*(5*j))>>>13,p&=8191,p+=B*(5*H),p+=M*(5*Y),p+=k*(5*C),p+=P*(5*z),u+=(p+=K*(5*O))>>>13,p&=8191,l=u,l+=_*O,l+=E*D,l+=S*L,l+=U*(5*N),u=(l+=T*(5*R))>>>13,l&=8191,l+=B*(5*j),l+=M*(5*H),l+=k*(5*Y),l+=P*(5*C),d=u+=(l+=K*(5*z))>>>13,d+=_*z,d+=E*O,d+=S*D,d+=U*L,u=(d+=T*(5*N))>>>13,d&=8191,d+=B*(5*R),d+=M*(5*j),d+=k*(5*H),d+=P*(5*Y),g=u+=(d+=K*(5*C))>>>13,g+=_*C,g+=E*z,g+=S*O,g+=U*D,u=(g+=T*L)>>>13,g&=8191,g+=B*(5*N),g+=M*(5*R),g+=k*(5*j),g+=P*(5*H),b=u+=(g+=K*(5*Y))>>>13,b+=_*Y,b+=E*C,b+=S*z,b+=U*O,u=(b+=T*D)>>>13,b&=8191,b+=B*L,b+=M*(5*N),b+=k*(5*R),b+=P*(5*j),w=u+=(b+=K*(5*H))>>>13,w+=_*H,w+=E*Y,w+=S*C,w+=U*z,u=(w+=T*O)>>>13,w&=8191,w+=B*D,w+=M*L,w+=k*(5*N),w+=P*(5*R),v=u+=(w+=K*(5*j))>>>13,v+=_*j,v+=E*H,v+=S*Y,v+=U*C,u=(v+=T*z)>>>13,v&=8191,v+=B*O,v+=M*D,v+=k*L,v+=P*(5*N),A=u+=(v+=K*(5*R))>>>13,A+=_*R,A+=E*j,A+=S*H,A+=U*Y,u=(A+=T*C)>>>13,A&=8191,A+=B*z,A+=M*O,A+=k*D,A+=P*L,x=u+=(A+=K*(5*N))>>>13,x+=_*N,x+=E*R,x+=S*j,x+=U*H,u=(x+=T*Y)>>>13,x&=8191,x+=B*C,x+=M*z,x+=k*O,x+=P*D,_=y=8191&(u=(u=((u+=(x+=K*L)>>>13)<<2)+u|0)+(y&=8191)|0),E=p+=u>>>=13,S=l&=8191,U=d&=8191,T=g&=8191,B=b&=8191,M=w&=8191,k=v&=8191,P=A&=8191,K=x&=8191,e+=16,t-=16;this.h[0]=_,this.h[1]=E,this.h[2]=S,this.h[3]=U,this.h[4]=T,this.h[5]=B,this.h[6]=M,this.h[7]=k,this.h[8]=P,this.h[9]=K},S.prototype.finish=function(r,e){var t,n,o,i,a=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(t=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=t,t=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*t,t=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=t,t=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=t,a[0]=this.h[0]+5,t=a[0]>>>13,a[0]&=8191,i=1;i<10;i++)a[i]=this.h[i]+t,t=a[i]>>>13,a[i]&=8191;for(a[9]-=8192,n=(1^t)-1,i=0;i<10;i++)a[i]&=n;for(n=~n,i=0;i<10;i++)this.h[i]=this.h[i]&n|a[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),this.h[0]=65535&(o=this.h[0]+this.pad[0]),i=1;i<8;i++)this.h[i]=65535&(o=(this.h[i]+this.pad[i]|0)+(o>>>16)|0);r[e+0]=this.h[0]>>>0&255,r[e+1]=this.h[0]>>>8&255,r[e+2]=this.h[1]>>>0&255,r[e+3]=this.h[1]>>>8&255,r[e+4]=this.h[2]>>>0&255,r[e+5]=this.h[2]>>>8&255,r[e+6]=this.h[3]>>>0&255,r[e+7]=this.h[3]>>>8&255,r[e+8]=this.h[4]>>>0&255,r[e+9]=this.h[4]>>>8&255,r[e+10]=this.h[5]>>>0&255,r[e+11]=this.h[5]>>>8&255,r[e+12]=this.h[6]>>>0&255,r[e+13]=this.h[6]>>>8&255,r[e+14]=this.h[7]>>>0&255,r[e+15]=this.h[7]>>>8&255},S.prototype.update=function(r,e,t){var n,o;if(this.leftover){for((o=16-this.leftover)>t&&(o=t),n=0;n<o;n++)this.buffer[this.leftover+n]=r[e+n];if(t-=o,e+=o,this.leftover+=o,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(t>=16&&(this.blocks(r,e,o=t-t%16),e+=o,t-=o),t){for(n=0;n<t;n++)this.buffer[this.leftover+n]=r[e+n];this.leftover+=t}};var F=B,Z=M,G=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function q(r,e,t,n){for(var o,i,a,s,f,c,h,u,y,p,l,d,g,b,w,v,A,x,m,_,E,S,U=new Int32Array(16),T=new Int32Array(16),B=r[0],M=r[1],k=r[2],P=r[3],K=r[4],L=r[5],D=r[6],O=r[7],z=e[0],C=e[1],Y=e[2],H=e[3],j=e[4],R=e[5],N=e[6],I=e[7],J=0;n>=128;){for(w=0;w<16;w++)U[w]=t[(v=8*w+J)+0]<<24|t[v+1]<<16|t[v+2]<<8|t[v+3],T[w]=t[v+4]<<24|t[v+5]<<16|t[v+6]<<8|t[v+7];for(w=0;w<80;w++)if(o=M,i=k,a=K,s=L,f=D,h=C,u=Y,y=j,p=R,l=N,m=65535&(x=I),_=x>>>16,E=65535&(A=O),S=A>>>16,m+=65535&(x=(j>>>14|K<<18)^(j>>>18|K<<14)^(K>>>9|j<<23)),_+=x>>>16,E+=65535&(A=(K>>>14|j<<18)^(K>>>18|j<<14)^(j>>>9|K<<23)),S+=A>>>16,m+=65535&(x=j&R^~j&N),_+=x>>>16,E+=65535&(A=K&L^~K&D),S+=A>>>16,m+=65535&(x=G[2*w+1]),_+=x>>>16,E+=65535&(A=G[2*w]),S+=A>>>16,_+=(x=T[w%16])>>>16,E+=65535&(A=U[w%16]),S+=A>>>16,E+=(_+=(m+=65535&x)>>>16)>>>16,m=65535&(x=b=65535&m|_<<16),_=x>>>16,E=65535&(A=g=65535&E|(S+=E>>>16)<<16),S=A>>>16,m+=65535&(x=(z>>>28|B<<4)^(B>>>2|z<<30)^(B>>>7|z<<25)),_+=x>>>16,E+=65535&(A=(B>>>28|z<<4)^(z>>>2|B<<30)^(z>>>7|B<<25)),S+=A>>>16,_+=(x=z&C^z&Y^C&Y)>>>16,E+=65535&(A=B&M^B&k^M&k),S+=A>>>16,c=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,d=65535&m|_<<16,m=65535&(x=H),_=x>>>16,E=65535&(A=P),S=A>>>16,_+=(x=b)>>>16,E+=65535&(A=g),S+=A>>>16,M=B,k=o,P=i,K=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,L=a,D=s,O=f,B=c,C=z,Y=h,H=u,j=65535&m|_<<16,R=y,N=p,I=l,z=d,w%16==15)for(v=0;v<16;v++)m=65535&(x=T[v]),_=x>>>16,E=65535&(A=U[v]),S=A>>>16,m+=65535&(x=T[(v+9)%16]),_+=x>>>16,E+=65535&(A=U[(v+9)%16]),S+=A>>>16,m+=65535&(x=((b=T[(v+1)%16])>>>1|(g=U[(v+1)%16])<<31)^(b>>>8|g<<24)^(b>>>7|g<<25)),_+=x>>>16,E+=65535&(A=(g>>>1|b<<31)^(g>>>8|b<<24)^g>>>7),S+=A>>>16,_+=(x=((b=T[(v+14)%16])>>>19|(g=U[(v+14)%16])<<13)^(g>>>29|b<<3)^(b>>>6|g<<26))>>>16,E+=65535&(A=(g>>>19|b<<13)^(b>>>29|g<<3)^g>>>6),S+=A>>>16,U[v]=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,T[v]=65535&m|_<<16;m=65535&(x=z),_=x>>>16,E=65535&(A=B),S=A>>>16,_+=(x=e[0])>>>16,E+=65535&(A=r[0]),S+=A>>>16,r[0]=B=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,e[0]=z=65535&m|_<<16,m=65535&(x=C),_=x>>>16,E=65535&(A=M),S=A>>>16,_+=(x=e[1])>>>16,E+=65535&(A=r[1]),S+=A>>>16,r[1]=M=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,e[1]=C=65535&m|_<<16,m=65535&(x=Y),_=x>>>16,E=65535&(A=k),S=A>>>16,_+=(x=e[2])>>>16,E+=65535&(A=r[2]),S+=A>>>16,r[2]=k=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,e[2]=Y=65535&m|_<<16,m=65535&(x=H),_=x>>>16,E=65535&(A=P),S=A>>>16,_+=(x=e[3])>>>16,E+=65535&(A=r[3]),S+=A>>>16,r[3]=P=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,e[3]=H=65535&m|_<<16,m=65535&(x=j),_=x>>>16,E=65535&(A=K),S=A>>>16,_+=(x=e[4])>>>16,E+=65535&(A=r[4]),S+=A>>>16,r[4]=K=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,e[4]=j=65535&m|_<<16,m=65535&(x=R),_=x>>>16,E=65535&(A=L),S=A>>>16,_+=(x=e[5])>>>16,E+=65535&(A=r[5]),S+=A>>>16,r[5]=L=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,e[5]=R=65535&m|_<<16,m=65535&(x=N),_=x>>>16,E=65535&(A=D),S=A>>>16,_+=(x=e[6])>>>16,E+=65535&(A=r[6]),S+=A>>>16,r[6]=D=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,e[6]=N=65535&m|_<<16,m=65535&(x=I),_=x>>>16,E=65535&(A=O),S=A>>>16,_+=(x=e[7])>>>16,E+=65535&(A=r[7]),S+=A>>>16,r[7]=O=65535&(E+=(_+=(m+=65535&x)>>>16)>>>16)|(S+=E>>>16)<<16,e[7]=I=65535&m|_<<16,J+=128,n-=128}return n}function Q(r,e,t){var n,o=new Int32Array(8),i=new Int32Array(8),a=new Uint8Array(256),s=t;for(o[0]=1779033703,o[1]=3144134277,o[2]=1013904242,o[3]=2773480762,o[4]=1359893119,o[5]=2600822924,o[6]=528734635,o[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,q(o,i,e,t),t%=128,n=0;n<t;n++)a[n]=e[s-t+n];for(a[t]=128,a[(t=256-128*(t<112?1:0))-9]=0,l(a,t-8,s/536870912|0,s<<3),q(o,i,a,t),n=0;n<8;n++)l(r,8*n,o[n],i[n]);return 0}function X(r,t){var n=e(),o=e(),i=e(),a=e(),s=e(),f=e(),c=e(),u=e(),y=e();Y(n,r[1],r[0]),Y(y,t[1],t[0]),H(n,n,y),C(o,r[0],r[1]),C(y,t[0],t[1]),H(o,o,y),H(i,r[3],t[3]),H(i,i,h),H(a,r[2],t[2]),C(a,a,a),Y(s,o,n),Y(f,a,i),C(c,a,i),C(u,o,n),H(r[0],s,f),H(r[1],u,c),H(r[2],c,f),H(r[3],s,u)}function W(r,e,t){var n;for(n=0;n<4;n++)K(r[n],e[n],t)}function rr(r,t){var n=e(),o=e(),i=e();R(i,t[2]),H(n,t[0],i),H(o,t[1],i),L(r,o),r[31]^=O(n)<<7}function er(r,e,t){var n,o;for(k(r[0],a),k(r[1],s),k(r[2],s),k(r[3],a),o=255;o>=0;--o)W(r,e,n=t[o/8|0]>>(7&o)&1),X(e,r),X(r,r),W(r,e,n)}function tr(r,t){var n=[e(),e(),e(),e()];k(n[0],u),k(n[1],y),k(n[2],s),H(n[3],u,y),er(r,n,t)}function nr(r,t,o){var i,a=new Uint8Array(64),s=[e(),e(),e(),e()];for(o||n(t,32),Q(a,t,32),a[0]&=248,a[31]&=127,a[31]|=64,tr(s,a),rr(r,s),i=0;i<32;i++)t[i+32]=r[i];return 0}var or=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ir(r,e){var t,n,o,i;for(n=63;n>=32;--n){for(t=0,o=n-32,i=n-12;o<i;++o)e[o]+=t-16*e[n]*or[o-(n-32)],t=Math.floor((e[o]+128)/256),e[o]-=256*t;e[o]+=t,e[n]=0}for(t=0,o=0;o<32;o++)e[o]+=t-(e[31]>>4)*or[o],t=e[o]>>8,e[o]&=255;for(o=0;o<32;o++)e[o]-=t*or[o];for(n=0;n<32;n++)e[n+1]+=e[n]>>8,r[n]=255&e[n]}function ar(r){var e,t=new Float64Array(64);for(e=0;e<64;e++)t[e]=r[e];for(e=0;e<64;e++)r[e]=0;ir(r,t)}function sr(r,t,n,o){var i,a,s=new Uint8Array(64),f=new Uint8Array(64),c=new Uint8Array(64),h=new Float64Array(64),u=[e(),e(),e(),e()];Q(s,o,32),s[0]&=248,s[31]&=127,s[31]|=64;var y=n+64;for(i=0;i<n;i++)r[64+i]=t[i];for(i=0;i<32;i++)r[32+i]=s[32+i];for(Q(c,r.subarray(32),n+32),ar(c),tr(u,c),rr(r,u),i=32;i<64;i++)r[i]=o[i];for(Q(f,r,n+64),ar(f),i=0;i<64;i++)h[i]=0;for(i=0;i<32;i++)h[i]=c[i];for(i=0;i<32;i++)for(a=0;a<32;a++)h[i+a]+=f[i]*s[a];return ir(r.subarray(32),h),y}function fr(r,t,n,o){var i,f=new Uint8Array(32),h=new Uint8Array(64),u=[e(),e(),e(),e()],y=[e(),e(),e(),e()];if(n<64)return-1;if(function(r,t){var n=e(),o=e(),i=e(),f=e(),h=e(),u=e(),y=e();return k(r[2],s),z(r[1],t),j(i,r[1]),H(f,i,c),Y(i,i,r[2]),C(f,r[2],f),j(h,f),j(u,h),H(y,u,h),H(n,y,i),H(n,n,f),N(n,n),H(n,n,i),H(n,n,f),H(n,n,f),H(r[0],n,f),j(o,r[0]),H(o,o,f),D(o,i)&&H(r[0],r[0],p),j(o,r[0]),H(o,o,f),D(o,i)?-1:(O(r[0])===t[31]>>7&&Y(r[0],a,r[0]),H(r[3],r[0],r[1]),0)}(y,o))return-1;for(i=0;i<n;i++)r[i]=t[i];for(i=0;i<32;i++)r[i+32]=o[i];if(Q(h,r,n),ar(h),er(u,y,h),tr(y,t.subarray(32)),X(u,y),rr(f,u),n-=64,b(t,0,f,0)){for(i=0;i<n;i++)r[i]=0;return-1}for(i=0;i<n;i++)r[i]=t[i+64];return n}var cr,hr=64,ur=32,yr=64;function pr(r,e){if(32!==r.length)throw new Error(\"bad key size\");if(24!==e.length)throw new Error(\"bad nonce size\")}function lr(){for(var r=0;r<arguments.length;r++)if(!(arguments[r]instanceof Uint8Array))throw new TypeError(\"unexpected type, use Uint8Array\")}function dr(r){for(var e=0;e<r.length;e++)r[e]=0}r.lowlevel={crypto_core_hsalsa20:v,crypto_stream_xor:E,crypto_stream:_,crypto_stream_salsa20_xor:x,crypto_stream_salsa20:m,crypto_onetimeauth:U,crypto_onetimeauth_verify:T,crypto_verify_16:g,crypto_verify_32:b,crypto_secretbox:B,crypto_secretbox_open:M,crypto_scalarmult:I,crypto_scalarmult_base:J,crypto_box_beforenm:$,crypto_box_afternm:F,crypto_box:function(r,e,t,n,o,i){var a=new Uint8Array(32);return $(a,o,i),F(r,e,t,n,a)},crypto_box_open:function(r,e,t,n,o,i){var a=new Uint8Array(32);return $(a,o,i),Z(r,e,t,n,a)},crypto_box_keypair:V,crypto_hash:Q,crypto_sign:sr,crypto_sign_keypair:nr,crypto_sign_open:fr,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:hr,crypto_sign_PUBLICKEYBYTES:ur,crypto_sign_SECRETKEYBYTES:yr,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:e,D:c,L:or,pack25519:L,unpack25519:z,M:H,A:C,S:j,Z:Y,pow2523:N,add:X,set25519:k,modL:ir,scalarmult:er,scalarbase:tr},r.randomBytes=function(r){var e=new Uint8Array(r);return n(e,r),e},r.secretbox=function(r,e,t){lr(r,e,t),pr(t,e);for(var n=new Uint8Array(32+r.length),o=new Uint8Array(n.length),i=0;i<r.length;i++)n[i+32]=r[i];return B(o,n,n.length,e,t),o.subarray(16)},r.secretbox.open=function(r,e,t){lr(r,e,t),pr(t,e);for(var n=new Uint8Array(16+r.length),o=new Uint8Array(n.length),i=0;i<r.length;i++)n[i+16]=r[i];return n.length<32||0!==M(o,n,n.length,e,t)?null:o.subarray(32)},r.secretbox.keyLength=32,r.secretbox.nonceLength=24,r.secretbox.overheadLength=16,r.scalarMult=function(r,e){if(lr(r,e),32!==r.length)throw new Error(\"bad n size\");if(32!==e.length)throw new Error(\"bad p size\");var t=new Uint8Array(32);return I(t,r,e),t},r.scalarMult.base=function(r){if(lr(r),32!==r.length)throw new Error(\"bad n size\");var e=new Uint8Array(32);return J(e,r),e},r.scalarMult.scalarLength=32,r.scalarMult.groupElementLength=32,r.box=function(e,t,n,o){var i=r.box.before(n,o);return r.secretbox(e,t,i)},r.box.before=function(r,e){lr(r,e),function(r,e){if(32!==r.length)throw new Error(\"bad public key size\");if(32!==e.length)throw new Error(\"bad secret key size\")}(r,e);var t=new Uint8Array(32);return $(t,r,e),t},r.box.after=r.secretbox,r.box.open=function(e,t,n,o){var i=r.box.before(n,o);return r.secretbox.open(e,t,i)},r.box.open.after=r.secretbox.open,r.box.keyPair=function(){var r=new Uint8Array(32),e=new Uint8Array(32);return V(r,e),{publicKey:r,secretKey:e}},r.box.keyPair.fromSecretKey=function(r){if(lr(r),32!==r.length)throw new Error(\"bad secret key size\");var e=new Uint8Array(32);return J(e,r),{publicKey:e,secretKey:new Uint8Array(r)}},r.box.publicKeyLength=32,r.box.secretKeyLength=32,r.box.sharedKeyLength=32,r.box.nonceLength=24,r.box.overheadLength=r.secretbox.overheadLength,r.sign=function(r,e){if(lr(r,e),e.length!==yr)throw new Error(\"bad secret key size\");var t=new Uint8Array(hr+r.length);return sr(t,r,r.length,e),t},r.sign.open=function(r,e){if(lr(r,e),e.length!==ur)throw new Error(\"bad public key size\");var t=new Uint8Array(r.length),n=fr(t,r,r.length,e);if(n<0)return null;for(var o=new Uint8Array(n),i=0;i<o.length;i++)o[i]=t[i];return o},r.sign.detached=function(e,t){for(var n=r.sign(e,t),o=new Uint8Array(hr),i=0;i<o.length;i++)o[i]=n[i];return o},r.sign.detached.verify=function(r,e,t){if(lr(r,e,t),e.length!==hr)throw new Error(\"bad signature size\");if(t.length!==ur)throw new Error(\"bad public key size\");var n,o=new Uint8Array(hr+r.length),i=new Uint8Array(hr+r.length);for(n=0;n<hr;n++)o[n]=e[n];for(n=0;n<r.length;n++)o[n+hr]=r[n];return fr(i,o,o.length,t)>=0},r.sign.keyPair=function(){var r=new Uint8Array(ur),e=new Uint8Array(yr);return nr(r,e),{publicKey:r,secretKey:e}},r.sign.keyPair.fromSecretKey=function(r){if(lr(r),r.length!==yr)throw new Error(\"bad secret key size\");for(var e=new Uint8Array(ur),t=0;t<e.length;t++)e[t]=r[32+t];return{publicKey:e,secretKey:new Uint8Array(r)}},r.sign.keyPair.fromSeed=function(r){if(lr(r),32!==r.length)throw new Error(\"bad seed size\");for(var e=new Uint8Array(ur),t=new Uint8Array(yr),n=0;n<32;n++)t[n]=r[n];return nr(e,t,!0),{publicKey:e,secretKey:t}},r.sign.publicKeyLength=ur,r.sign.secretKeyLength=yr,r.sign.seedLength=32,r.sign.signatureLength=hr,r.hash=function(r){lr(r);var e=new Uint8Array(64);return Q(e,r,r.length),e},r.hash.hashLength=64,r.verify=function(r,e){return lr(r,e),0!==r.length&&0!==e.length&&r.length===e.length&&0===d(r,0,e,0,r.length)},r.setPRNG=function(r){n=r},(cr=\"undefined\"!=typeof self?self.crypto||self.msCrypto:null)&&cr.getRandomValues?r.setPRNG(function(r,e){var t,n=new Uint8Array(e);for(t=0;t<e;t+=65536)cr.getRandomValues(n.subarray(t,t+Math.min(e-t,65536)));for(t=0;t<e;t++)r[t]=n[t];dr(n)}):(cr=t(19))&&cr.randomBytes&&r.setPRNG(function(r,e){var t,n=cr.randomBytes(e);for(t=0;t<e;t++)r[t]=n[t];dr(n)})}(r.exports?r.exports:self.nacl=self.nacl||{})},Qnqb:function(r,e,t){!function(e,t){\"use strict\";r.exports?r.exports=t():(e.nacl||(e.nacl={}),e.nacl.util=t())}(this,function(){\"use strict\";var r={};function e(r){if(!/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(r))throw new TypeError(\"invalid encoding\")}return r.decodeUTF8=function(r){if(\"string\"!=typeof r)throw new TypeError(\"expected string\");var e,t=unescape(encodeURIComponent(r)),n=new Uint8Array(t.length);for(e=0;e<t.length;e++)n[e]=t.charCodeAt(e);return n},r.encodeUTF8=function(r){var e,t=[];for(e=0;e<r.length;e++)t.push(String.fromCharCode(r[e]));return decodeURIComponent(escape(t.join(\"\")))},\"undefined\"==typeof atob?void 0!==Buffer.from?(r.encodeBase64=function(r){return Buffer.from(r).toString(\"base64\")},r.decodeBase64=function(r){return e(r),new Uint8Array(Array.prototype.slice.call(Buffer.from(r,\"base64\"),0))}):(r.encodeBase64=function(r){return new Buffer(r).toString(\"base64\")},r.decodeBase64=function(r){return e(r),new Uint8Array(Array.prototype.slice.call(new Buffer(r,\"base64\"),0))}):(r.encodeBase64=function(r){var e,t=[],n=r.length;for(e=0;e<n;e++)t.push(String.fromCharCode(r[e]));return btoa(t.join(\"\"))},r.decodeBase64=function(r){e(r);var t,n=atob(r),o=new Uint8Array(n.length);for(t=0;t<n.length;t++)o[t]=n.charCodeAt(t);return o}),r})}}]);","name":"47.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[47],{\n\n/***/ 19:\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"8Qrm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverTypedSignature_v4 = exports.recoverTypedSignature = exports.signTypedData_v4 = exports.signTypedData = exports.recoverTypedMessage = exports.signTypedMessage = exports.getEncryptionPublicKey = exports.decryptSafely = exports.decrypt = exports.encryptSafely = exports.encrypt = exports.recoverTypedSignatureLegacy = exports.signTypedDataLegacy = exports.typedSignatureHash = exports.extractPublicKey = exports.recoverPersonalSignature = exports.personalSign = exports.normalize = exports.concatSig = exports.TypedDataUtils = exports.TYPED_MESSAGE_SCHEMA = void 0;\nconst ethUtil = __importStar(__webpack_require__(\"/JJz\"));\nconst ethAbi = __importStar(__webpack_require__(\"JQL/\"));\nconst nacl = __importStar(__webpack_require__(\"CEl9\"));\nconst naclUtil = __importStar(__webpack_require__(\"Qnqb\"));\nconst TYPED_MESSAGE_SCHEMA = {\n    type: 'object',\n    properties: {\n        types: {\n            type: 'object',\n            additionalProperties: {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        name: { type: 'string' },\n                        type: { type: 'string' },\n                    },\n                    required: ['name', 'type'],\n                },\n            },\n        },\n        primaryType: { type: 'string' },\n        domain: { type: 'object' },\n        message: { type: 'object' },\n    },\n    required: ['types', 'primaryType', 'domain', 'message'],\n};\nexports.TYPED_MESSAGE_SCHEMA = TYPED_MESSAGE_SCHEMA;\n/**\n * A collection of utility functions used for signing typed data\n */\nconst TypedDataUtils = {\n    /**\n     * Encodes an object by encoding and concatenating each of its members\n     *\n     * @param {string} primaryType - Root type\n     * @param {Object} data - Object to encode\n     * @param {Object} types - Type definitions\n     * @returns {Buffer} - Encoded representation of an object\n     */\n    encodeData(primaryType, data, types, useV4 = true) {\n        const encodedTypes = ['bytes32'];\n        const encodedValues = [this.hashType(primaryType, types)];\n        if (useV4) {\n            const encodeField = (name, type, value) => {\n                if (types[type] !== undefined) {\n                    return [\n                        'bytes32',\n                        value == null // eslint-disable-line no-eq-null\n                            ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n                            : ethUtil.keccak(this.encodeData(type, value, types, useV4)),\n                    ];\n                }\n                if (value === undefined) {\n                    throw new Error(`missing value for field ${name} of type ${type}`);\n                }\n                if (type === 'bytes') {\n                    return ['bytes32', ethUtil.keccak(value)];\n                }\n                if (type === 'string') {\n                    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n                    if (typeof value === 'string') {\n                        value = Buffer.from(value, 'utf8');\n                    }\n                    return ['bytes32', ethUtil.keccak(value)];\n                }\n                if (type.lastIndexOf(']') === type.length - 1) {\n                    const parsedType = type.slice(0, type.lastIndexOf('['));\n                    const typeValuePairs = value.map((item) => encodeField(name, parsedType, item));\n                    return [\n                        'bytes32',\n                        ethUtil.keccak(ethAbi.rawEncode(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n                    ];\n                }\n                return [type, value];\n            };\n            for (const field of types[primaryType]) {\n                const [type, value] = encodeField(field.name, field.type, data[field.name]);\n                encodedTypes.push(type);\n                encodedValues.push(value);\n            }\n        }\n        else {\n            for (const field of types[primaryType]) {\n                let value = data[field.name];\n                if (value !== undefined) {\n                    if (field.type === 'bytes') {\n                        encodedTypes.push('bytes32');\n                        value = ethUtil.keccak(value);\n                        encodedValues.push(value);\n                    }\n                    else if (field.type === 'string') {\n                        encodedTypes.push('bytes32');\n                        // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n                        if (typeof value === 'string') {\n                            value = Buffer.from(value, 'utf8');\n                        }\n                        value = ethUtil.keccak(value);\n                        encodedValues.push(value);\n                    }\n                    else if (types[field.type] !== undefined) {\n                        encodedTypes.push('bytes32');\n                        value = ethUtil.keccak(this.encodeData(field.type, value, types, useV4));\n                        encodedValues.push(value);\n                    }\n                    else if (field.type.lastIndexOf(']') === field.type.length - 1) {\n                        throw new Error('Arrays are unimplemented in encodeData; use V4 extension');\n                    }\n                    else {\n                        encodedTypes.push(field.type);\n                        encodedValues.push(value);\n                    }\n                }\n            }\n        }\n        return ethAbi.rawEncode(encodedTypes, encodedValues);\n    },\n    /**\n     * Encodes the type of an object by encoding a comma delimited list of its members\n     *\n     * @param {string} primaryType - Root type to encode\n     * @param {Object} types - Type definitions\n     * @returns {string} - Encoded representation of the type of an object\n     */\n    encodeType(primaryType, types) {\n        let result = '';\n        let deps = this.findTypeDependencies(primaryType, types).filter((dep) => dep !== primaryType);\n        deps = [primaryType].concat(deps.sort());\n        for (const type of deps) {\n            const children = types[type];\n            if (!children) {\n                throw new Error(`No type definition specified: ${type}`);\n            }\n            result += `${type}(${types[type]\n                .map(({ name, type: t }) => `${t} ${name}`)\n                .join(',')})`;\n        }\n        return result;\n    },\n    /**\n     * Finds all types within a type definition object\n     *\n     * @param {string} primaryType - Root type\n     * @param {Object} types - Type definitions\n     * @param {Array} results - current set of accumulated types\n     * @returns {Array} - Set of all types found in the type definition\n     */\n    findTypeDependencies(primaryType, types, results = []) {\n        [primaryType] = primaryType.match(/^\\w*/u);\n        if (results.includes(primaryType) || types[primaryType] === undefined) {\n            return results;\n        }\n        results.push(primaryType);\n        for (const field of types[primaryType]) {\n            for (const dep of this.findTypeDependencies(field.type, types, results)) {\n                !results.includes(dep) && results.push(dep);\n            }\n        }\n        return results;\n    },\n    /**\n     * Hashes an object\n     *\n     * @param {string} primaryType - Root type\n     * @param {Object} data - Object to hash\n     * @param {Object} types - Type definitions\n     * @returns {Buffer} - Hash of an object\n     */\n    hashStruct(primaryType, data, types, useV4 = true) {\n        return ethUtil.keccak(this.encodeData(primaryType, data, types, useV4));\n    },\n    /**\n     * Hashes the type of an object\n     *\n     * @param {string} primaryType - Root type to hash\n     * @param {Object} types - Type definitions\n     * @returns {Buffer} - Hash of an object\n     */\n    hashType(primaryType, types) {\n        return ethUtil.keccak(this.encodeType(primaryType, types));\n    },\n    /**\n     * Removes properties from a message object that are not defined per EIP-712\n     *\n     * @param {Object} data - typed message object\n     * @returns {Object} - typed message object with only allowed fields\n     */\n    sanitizeData(data) {\n        const sanitizedData = {};\n        for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n            if (data[key]) {\n                sanitizedData[key] = data[key];\n            }\n        }\n        if ('types' in sanitizedData) {\n            sanitizedData.types = Object.assign({ EIP712Domain: [] }, sanitizedData.types);\n        }\n        return sanitizedData;\n    },\n    /**\n     * Signs a typed message as per EIP-712 and returns its keccak hash\n     *\n     * @param {Object} typedData - Types message data to sign\n     * @returns {Buffer} - keccak hash of the resulting signed message\n     */\n    sign(typedData, useV4 = true) {\n        const sanitizedData = this.sanitizeData(typedData);\n        const parts = [Buffer.from('1901', 'hex')];\n        parts.push(this.hashStruct('EIP712Domain', sanitizedData.domain, sanitizedData.types, useV4));\n        if (sanitizedData.primaryType !== 'EIP712Domain') {\n            parts.push(this.hashStruct(sanitizedData.primaryType, sanitizedData.message, sanitizedData.types, useV4));\n        }\n        return ethUtil.keccak(Buffer.concat(parts));\n    },\n};\nexports.TypedDataUtils = TypedDataUtils;\nfunction concatSig(v, r, s) {\n    const rSig = ethUtil.fromSigned(r);\n    const sSig = ethUtil.fromSigned(s);\n    const vSig = ethUtil.bufferToInt(v);\n    const rStr = padWithZeroes(ethUtil.toUnsigned(rSig).toString('hex'), 64);\n    const sStr = padWithZeroes(ethUtil.toUnsigned(sSig).toString('hex'), 64);\n    const vStr = ethUtil.stripHexPrefix(ethUtil.intToHex(vSig));\n    return ethUtil.addHexPrefix(rStr.concat(sStr, vStr)).toString('hex');\n}\nexports.concatSig = concatSig;\nfunction normalize(input) {\n    if (!input) {\n        return undefined;\n    }\n    if (typeof input === 'number') {\n        const buffer = ethUtil.toBuffer(input);\n        input = ethUtil.bufferToHex(buffer);\n    }\n    if (typeof input !== 'string') {\n        let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n        msg += ` received ${typeof input}: ${input}`;\n        throw new Error(msg);\n    }\n    return ethUtil.addHexPrefix(input.toLowerCase());\n}\nexports.normalize = normalize;\nfunction personalSign(privateKey, msgParams) {\n    const message = ethUtil.toBuffer(msgParams.data);\n    const msgHash = ethUtil.hashPersonalMessage(message);\n    const sig = ethUtil.ecsign(msgHash, privateKey);\n    const serialized = ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n    return serialized;\n}\nexports.personalSign = personalSign;\nfunction recoverPersonalSignature(msgParams) {\n    const publicKey = getPublicKeyFor(msgParams);\n    const sender = ethUtil.publicToAddress(publicKey);\n    const senderHex = ethUtil.bufferToHex(sender);\n    return senderHex;\n}\nexports.recoverPersonalSignature = recoverPersonalSignature;\nfunction extractPublicKey(msgParams) {\n    const publicKey = getPublicKeyFor(msgParams);\n    return `0x${publicKey.toString('hex')}`;\n}\nexports.extractPublicKey = extractPublicKey;\nfunction externalTypedSignatureHash(typedData) {\n    const hashBuffer = typedSignatureHash(typedData);\n    return ethUtil.bufferToHex(hashBuffer);\n}\nexports.typedSignatureHash = externalTypedSignatureHash;\nfunction signTypedDataLegacy(privateKey, msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data);\n    const sig = ethUtil.ecsign(msgHash, privateKey);\n    return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\nexports.signTypedDataLegacy = signTypedDataLegacy;\nfunction recoverTypedSignatureLegacy(msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data);\n    const publicKey = recoverPublicKey(msgHash, msgParams.sig);\n    const sender = ethUtil.publicToAddress(publicKey);\n    return ethUtil.bufferToHex(sender);\n}\nexports.recoverTypedSignatureLegacy = recoverTypedSignatureLegacy;\nfunction encrypt(receiverPublicKey, msgParams, version) {\n    switch (version) {\n        case 'x25519-xsalsa20-poly1305': {\n            if (typeof msgParams.data !== 'string') {\n                throw new Error('Cannot detect secret message, message params should be of the form {data: \"secret message\"} ');\n            }\n            // generate ephemeral keypair\n            const ephemeralKeyPair = nacl.box.keyPair();\n            // assemble encryption parameters - from string to UInt8\n            let pubKeyUInt8Array;\n            try {\n                pubKeyUInt8Array = naclUtil.decodeBase64(receiverPublicKey);\n            }\n            catch (err) {\n                throw new Error('Bad public key');\n            }\n            const msgParamsUInt8Array = naclUtil.decodeUTF8(msgParams.data);\n            const nonce = nacl.randomBytes(nacl.box.nonceLength);\n            // encrypt\n            const encryptedMessage = nacl.box(msgParamsUInt8Array, nonce, pubKeyUInt8Array, ephemeralKeyPair.secretKey);\n            // handle encrypted data\n            const output = {\n                version: 'x25519-xsalsa20-poly1305',\n                nonce: naclUtil.encodeBase64(nonce),\n                ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n                ciphertext: naclUtil.encodeBase64(encryptedMessage),\n            };\n            // return encrypted msg data\n            return output;\n        }\n        default:\n            throw new Error('Encryption type/version not supported');\n    }\n}\nexports.encrypt = encrypt;\nfunction encryptSafely(receiverPublicKey, msgParams, version) {\n    const DEFAULT_PADDING_LENGTH = 2 ** 11;\n    const NACL_EXTRA_BYTES = 16;\n    const { data } = msgParams;\n    if (!data) {\n        throw new Error('Cannot encrypt empty msg.data');\n    }\n    if (typeof data === 'object' && 'toJSON' in data) {\n        // remove toJSON attack vector\n        // TODO, check all possible children\n        throw new Error('Cannot encrypt with toJSON property.  Please remove toJSON property');\n    }\n    // add padding\n    const dataWithPadding = {\n        data,\n        padding: '',\n    };\n    // calculate padding\n    const dataLength = Buffer.byteLength(JSON.stringify(dataWithPadding), 'utf-8');\n    const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n    let padLength = 0;\n    // Only pad if necessary\n    if (modVal > 0) {\n        padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n    }\n    dataWithPadding.padding = '0'.repeat(padLength);\n    const paddedMsgParams = { data: JSON.stringify(dataWithPadding) };\n    return encrypt(receiverPublicKey, paddedMsgParams, version);\n}\nexports.encryptSafely = encryptSafely;\nfunction decrypt(encryptedData, receiverPrivateKey) {\n    switch (encryptedData.version) {\n        case 'x25519-xsalsa20-poly1305': {\n            // string to buffer to UInt8Array\n            const recieverPrivateKeyUint8Array = nacl_decodeHex(receiverPrivateKey);\n            const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(recieverPrivateKeyUint8Array).secretKey;\n            // assemble decryption parameters\n            const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n            const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n            const ephemPublicKey = naclUtil.decodeBase64(encryptedData.ephemPublicKey);\n            // decrypt\n            const decryptedMessage = nacl.box.open(ciphertext, nonce, ephemPublicKey, recieverEncryptionPrivateKey);\n            // return decrypted msg data\n            let output;\n            try {\n                output = naclUtil.encodeUTF8(decryptedMessage);\n            }\n            catch (err) {\n                throw new Error('Decryption failed.');\n            }\n            if (output) {\n                return output;\n            }\n            throw new Error('Decryption failed.');\n        }\n        default:\n            throw new Error('Encryption type/version not supported.');\n    }\n}\nexports.decrypt = decrypt;\nfunction decryptSafely(encryptedData, receiverPrivateKey) {\n    const dataWithPadding = JSON.parse(decrypt(encryptedData, receiverPrivateKey));\n    return dataWithPadding.data;\n}\nexports.decryptSafely = decryptSafely;\nfunction getEncryptionPublicKey(privateKey) {\n    const privateKeyUint8Array = nacl_decodeHex(privateKey);\n    const encryptionPublicKey = nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n    return naclUtil.encodeBase64(encryptionPublicKey);\n}\nexports.getEncryptionPublicKey = getEncryptionPublicKey;\n/**\n * A generic entry point for all typed data methods to be passed, includes a version parameter.\n */\nfunction signTypedMessage(privateKey, msgParams, version = 'V4') {\n    switch (version) {\n        case 'V1':\n            return signTypedDataLegacy(privateKey, msgParams);\n        case 'V3':\n            return signTypedData(privateKey, msgParams);\n        case 'V4':\n        default:\n            return signTypedData_v4(privateKey, msgParams);\n    }\n}\nexports.signTypedMessage = signTypedMessage;\nfunction recoverTypedMessage(msgParams, version = 'V4') {\n    switch (version) {\n        case 'V1':\n            return recoverTypedSignatureLegacy(msgParams);\n        case 'V3':\n            return recoverTypedSignature(msgParams);\n        case 'V4':\n        default:\n            return recoverTypedSignature_v4(msgParams);\n    }\n}\nexports.recoverTypedMessage = recoverTypedMessage;\nfunction signTypedData(privateKey, msgParams) {\n    const message = TypedDataUtils.sign(msgParams.data, false);\n    const sig = ethUtil.ecsign(message, privateKey);\n    return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\nexports.signTypedData = signTypedData;\nfunction signTypedData_v4(privateKey, msgParams) {\n    const message = TypedDataUtils.sign(msgParams.data);\n    const sig = ethUtil.ecsign(message, privateKey);\n    return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\nexports.signTypedData_v4 = signTypedData_v4;\nfunction recoverTypedSignature(msgParams) {\n    const message = TypedDataUtils.sign(msgParams.data, false);\n    const publicKey = recoverPublicKey(message, msgParams.sig);\n    const sender = ethUtil.publicToAddress(publicKey);\n    return ethUtil.bufferToHex(sender);\n}\nexports.recoverTypedSignature = recoverTypedSignature;\nfunction recoverTypedSignature_v4(msgParams) {\n    const message = TypedDataUtils.sign(msgParams.data);\n    const publicKey = recoverPublicKey(message, msgParams.sig);\n    const sender = ethUtil.publicToAddress(publicKey);\n    return ethUtil.bufferToHex(sender);\n}\nexports.recoverTypedSignature_v4 = recoverTypedSignature_v4;\n/**\n * @param typedData - Array of data along with types, as per EIP712.\n * @returns Buffer\n */\nfunction typedSignatureHash(typedData) {\n    const error = new Error('Expect argument to be non-empty array');\n    if (typeof typedData !== 'object' ||\n        !('length' in typedData) ||\n        !typedData.length) {\n        throw error;\n    }\n    const data = typedData.map(function (e) {\n        return e.type === 'bytes' ? ethUtil.toBuffer(e.value) : e.value;\n    });\n    const types = typedData.map(function (e) {\n        return e.type;\n    });\n    const schema = typedData.map(function (e) {\n        if (!e.name) {\n            throw error;\n        }\n        return `${e.type} ${e.name}`;\n    });\n    return ethAbi.soliditySHA3(['bytes32', 'bytes32'], [\n        ethAbi.soliditySHA3(new Array(typedData.length).fill('string'), schema),\n        ethAbi.soliditySHA3(types, data),\n    ]);\n}\nfunction recoverPublicKey(hash, sig) {\n    const signature = ethUtil.toBuffer(sig);\n    const sigParams = ethUtil.fromRpcSig(signature);\n    return ethUtil.ecrecover(hash, sigParams.v, sigParams.r, sigParams.s);\n}\nfunction getPublicKeyFor(msgParams) {\n    const message = ethUtil.toBuffer(msgParams.data);\n    const msgHash = ethUtil.hashPersonalMessage(message);\n    return recoverPublicKey(msgHash, msgParams.sig);\n}\nfunction padWithZeroes(number, length) {\n    let myString = `${number}`;\n    while (myString.length < length) {\n        myString = `0${myString}`;\n    }\n    return myString;\n}\n// converts hex strings to the Uint8Array format used by nacl\nfunction nacl_decodeHex(msgHex) {\n    const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n    return naclUtil.decodeBase64(msgBase64);\n}\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"CEl9\":\n/***/ (function(module, exports, __webpack_require__) {\n\n(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(19);\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n\n\n/***/ }),\n\n/***/ \"Qnqb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if ( true && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n\n\n/***/ })\n\n}]);","inputSourceMap":null}