{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{\"02t3\":function(e,t,r){\"use strict\";r.r(t),r.d(t,\"SettingsModule\",function(){return f});var n=r(\"ofXK\"),s=r(\"3Pt+\"),o=r(\"0IaG\"),a=r(\"tyNb\"),i=r(\"E+pt\"),m=r(\"fXoL\"),l=r(\"dNgK\"),d=r(\"qfBg\");let c=(()=>{class e{constructor(e,t,r){this.formbuilder=e,this.snackBar=t,this.userService=r,this.button_title=\"Save\",this.isAPILoading=!1,this.getProfileInfo=()=>{this.userService.viewProfile(this.currentUser.user_id).subscribe(e=>{this.userInfo=e.result})},this.updateApi=e=>{this.isAPILoading=!0,this.userService.updateApi(e,this.currentUser.user_id).subscribe(e=>{this.isAPILoading=!1,1==e.status?(localStorage.setItem(\"token\",e.return_id),this.snackBar.open(\"Password updated successfully\",\"\",{duration:2e3}),location.href=i.a.base_url):this.snackBar.open(e.message,\"\",{duration:2e3}),this.button_title=\"Save\"})},this.currentUser=this.userService.getUser(),this.passwordForm=e.group({password:[null,s.o.compose([s.o.required,s.o.minLength(3),s.o.maxLength(32)])],confirm_password:[null,s.o.compose([s.o.required,s.o.minLength(3),s.o.maxLength(32)])]}),this.getProfileInfo()}ngOnInit(){}onSubmit(e){if(this.passwordForm.valid&&\"Save\"==this.button_title){if(e.value.password!=e.value.confirm_password)return void this.snackBar.open(\"Password Mismatch\",\"\",{duration:2e3});this.button_title=\"Saving...\",this.updateApi({password:e.value.password})}else this.passwordForm.controls.password.invalid?this.passwordForm.controls.password.errors&&(this.passwordForm.controls.password.errors.required?this.snackBar.open(\"Password is required\",\"\",{duration:2e3}):this.passwordForm.controls.password.errors.minlength?this.snackBar.open(\"Password required minimum 3 characters\",\"\",{duration:2e3}):this.passwordForm.controls.password.errors.maxlength&&this.snackBar.open(\"Password required maximum 32 characters\",\"\",{duration:2e3})):this.passwordForm.controls.confirm_password.invalid&&this.passwordForm.controls.confirm_password.errors&&(this.passwordForm.controls.confirm_password.errors.required?this.snackBar.open(\"Confirm Password is required\",\"\",{duration:2e3}):this.passwordForm.controls.confirm_password.errors.minlength?this.snackBar.open(\"Confirm Password required minimum 3 characters\",\"\",{duration:2e3}):this.passwordForm.controls.confirm_password.errors.maxlength&&this.snackBar.open(\"Confirm Password required maximum 32 characters\",\"\",{duration:2e3}))}}return e.\\u0275fac=function(t){return new(t||e)(m[\"\\u0275\\u0275directiveInject\"](s.b),m[\"\\u0275\\u0275directiveInject\"](l.a),m[\"\\u0275\\u0275directiveInject\"](d.a))},e.\\u0275cmp=m[\"\\u0275\\u0275defineComponent\"]({type:e,selectors:[[\"app-changepassword\"]],decls:23,vars:2,consts:[[1,\"pagecontainer\"],[1,\"row\"],[1,\"col-lg-12\"],[1,\"card\"],[1,\"card-header\"],[1,\"card-body\"],[3,\"formGroup\",\"ngSubmit\"],[1,\"col-sm-6\"],[1,\"form-group\"],[\"for\",\"password\"],[\"type\",\"text\",\"placeholder\",\"Enter Password\",\"formControlName\",\"password\",\"required\",\"\",1,\"form-control\"],[\"for\",\"confirm_password\"],[\"type\",\"text\",\"placeholder\",\"Enter Confirm Password\",\"formControlName\",\"confirm_password\",\"required\",\"\",1,\"form-control\"],[1,\"col-12\"],[\"type\",\"submit\",1,\"btn\",\"btn-primary\",\"px-4\"]],template:function(e,t){1&e&&(m[\"\\u0275\\u0275elementStart\"](0,\"div\",0),m[\"\\u0275\\u0275elementStart\"](1,\"div\",1),m[\"\\u0275\\u0275elementStart\"](2,\"div\",2),m[\"\\u0275\\u0275elementStart\"](3,\"div\",3),m[\"\\u0275\\u0275elementStart\"](4,\"div\",4),m[\"\\u0275\\u0275text\"](5,\" Update Password \"),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementStart\"](6,\"div\",5),m[\"\\u0275\\u0275elementStart\"](7,\"form\",6),m[\"\\u0275\\u0275listener\"](\"ngSubmit\",function(){return t.onSubmit(t.passwordForm)}),m[\"\\u0275\\u0275elementStart\"](8,\"div\",1),m[\"\\u0275\\u0275elementStart\"](9,\"div\",7),m[\"\\u0275\\u0275elementStart\"](10,\"div\",8),m[\"\\u0275\\u0275elementStart\"](11,\"label\",9),m[\"\\u0275\\u0275text\"](12,\"Password\"),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275element\"](13,\"input\",10),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementStart\"](14,\"div\",7),m[\"\\u0275\\u0275elementStart\"](15,\"div\",8),m[\"\\u0275\\u0275elementStart\"](16,\"label\",11),m[\"\\u0275\\u0275text\"](17,\"Confirm Password\"),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275element\"](18,\"input\",12),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementStart\"](19,\"div\",1),m[\"\\u0275\\u0275elementStart\"](20,\"div\",13),m[\"\\u0275\\u0275elementStart\"](21,\"button\",14),m[\"\\u0275\\u0275text\"](22),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"]()),2&e&&(m[\"\\u0275\\u0275advance\"](7),m[\"\\u0275\\u0275property\"](\"formGroup\",t.passwordForm),m[\"\\u0275\\u0275advance\"](15),m[\"\\u0275\\u0275textInterpolate\"](t.button_title))},directives:[s.q,s.g,s.d,s.a,s.f,s.c,s.m],styles:[\".pagecontainer[_ngcontent-%COMP%]{margin-top:30px}\"]}),e})();const u=[{path:\"\",redirectTo:\"general\",pathMatch:\"full\"},{path:\"general\",component:(()=>{class e{constructor(e,t,r){this.formbuilder=e,this.snackBar=t,this.userService=r,this.button_title=\"Save\",this.isAPILoading=!1,this.getProfileInfo=()=>{this.userService.viewProfile(this.currentUser.user_id).subscribe(e=>{this.userInfo=e.result,this.generalForm.controls.username.setValue(this.userInfo.username),this.generalForm.controls.email.setValue(this.userInfo.email),this.generalForm.controls.first_name.setValue(this.userInfo.first_name),this.generalForm.controls.last_name.setValue(this.userInfo.last_name)})},this.updateApi=e=>{this.isAPILoading=!0,this.userService.updateApi(e,this.currentUser.user_id).subscribe(e=>{this.isAPILoading=!1,1==e.status?(localStorage.setItem(\"token\",e.return_id),this.snackBar.open(\"General settings updated successfully\",\"\",{duration:2e3}),location.href=i.a.base_url):this.snackBar.open(e.message,\"\",{duration:2e3}),this.button_title=\"Save\"})},this.currentUser=this.userService.getUser(),this.generalForm=e.group({username:[null,s.o.compose([s.o.required,s.o.minLength(3),s.o.maxLength(255)])],email:[null,s.o.compose([s.o.required,s.o.minLength(3),s.o.pattern(\"^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$\")])],first_name:[null,s.o.compose([s.o.required,s.o.maxLength(32)])],last_name:[null,s.o.compose([s.o.required,s.o.maxLength(32)])]}),this.getProfileInfo()}ngOnInit(){}onSubmit(e){this.generalForm.valid&&\"Save\"==this.button_title?(this.button_title=\"Saving...\",this.updateApi({username:e.value.username,first_name:e.value.first_name,last_name:e.value.last_name,email:e.value.email})):this.generalForm.controls.username.invalid?this.generalForm.controls.username.errors&&(this.generalForm.controls.username.errors.required?this.snackBar.open(\"Username is required\",\"\",{duration:2e3}):this.generalForm.controls.username.errors.minlength?this.snackBar.open(\"Username required minimum 3 characters\",\"\",{duration:2e3}):this.generalForm.controls.username.errors.maxlength&&this.snackBar.open(\"Username required maximum 255 characters\",\"\",{duration:2e3})):this.generalForm.controls.email.invalid?this.generalForm.controls.email.errors&&(console.log(this.generalForm.controls.email.errors),this.generalForm.controls.email.errors.required?this.snackBar.open(\"Email is required\",\"\",{duration:2e3}):this.generalForm.controls.email.errors.minlength?this.snackBar.open(\"Email required minimum 3 characters\",\"\",{duration:2e3}):this.generalForm.controls.email.errors.pattern&&this.snackBar.open(\"Invalid Email\",\"\",{duration:2e3})):this.generalForm.controls.first_name.invalid?this.generalForm.controls.first_name.errors&&(this.generalForm.controls.first_name.errors.required?this.snackBar.open(\"First Name is required\",\"\",{duration:2e3}):this.generalForm.controls.first_name.errors.minlength?this.snackBar.open(\"First Name required minimum 3 characters\",\"\",{duration:2e3}):this.generalForm.controls.first_name.errors.maxlength&&this.snackBar.open(\"First Name required maximum 32 characters\",\"\",{duration:2e3})):this.generalForm.controls.last_name.invalid&&this.generalForm.controls.last_name.errors&&(this.generalForm.controls.last_name.errors.required?this.snackBar.open(\"Last Name is required\",\"\",{duration:2e3}):this.generalForm.controls.last_name.errors.minlength?this.snackBar.open(\"Last Name required minimum 3 characters\",\"\",{duration:2e3}):this.generalForm.controls.last_name.errors.maxlength&&this.snackBar.open(\"Last Name required maximum 32 characters\",\"\",{duration:2e3}))}}return e.\\u0275fac=function(t){return new(t||e)(m[\"\\u0275\\u0275directiveInject\"](s.b),m[\"\\u0275\\u0275directiveInject\"](l.a),m[\"\\u0275\\u0275directiveInject\"](d.a))},e.\\u0275cmp=m[\"\\u0275\\u0275defineComponent\"]({type:e,selectors:[[\"app-general\"]],decls:34,vars:2,consts:[[1,\"pagecontainer\"],[1,\"row\"],[1,\"col-lg-12\"],[1,\"card\"],[1,\"card-header\"],[1,\"card-body\"],[3,\"formGroup\",\"ngSubmit\"],[1,\"col-sm-6\"],[1,\"form-group\"],[\"for\",\"username\"],[\"type\",\"text\",\"placeholder\",\"Enter User Name\",\"formControlName\",\"username\",\"required\",\"\",1,\"form-control\"],[\"for\",\"email\"],[\"type\",\"text\",\"placeholder\",\"Enter User Name\",\"formControlName\",\"email\",\"required\",\"\",1,\"form-control\"],[\"type\",\"text\",\"placeholder\",\"Enter First Name\",\"formControlName\",\"first_name\",\"required\",\"\",1,\"form-control\"],[\"type\",\"text\",\"placeholder\",\"Enter Last Name\",\"formControlName\",\"last_name\",\"required\",\"\",1,\"form-control\"],[1,\"col-12\"],[\"type\",\"submit\",1,\"btn\",\"btn-primary\",\"px-4\"]],template:function(e,t){1&e&&(m[\"\\u0275\\u0275elementStart\"](0,\"div\",0),m[\"\\u0275\\u0275elementStart\"](1,\"div\",1),m[\"\\u0275\\u0275elementStart\"](2,\"div\",2),m[\"\\u0275\\u0275elementStart\"](3,\"div\",3),m[\"\\u0275\\u0275elementStart\"](4,\"div\",4),m[\"\\u0275\\u0275text\"](5,\" General Settings \"),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementStart\"](6,\"div\",5),m[\"\\u0275\\u0275elementStart\"](7,\"form\",6),m[\"\\u0275\\u0275listener\"](\"ngSubmit\",function(){return t.onSubmit(t.generalForm)}),m[\"\\u0275\\u0275elementStart\"](8,\"div\",1),m[\"\\u0275\\u0275elementStart\"](9,\"div\",7),m[\"\\u0275\\u0275elementStart\"](10,\"div\",8),m[\"\\u0275\\u0275elementStart\"](11,\"label\",9),m[\"\\u0275\\u0275text\"](12,\"User Name\"),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275element\"](13,\"input\",10),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementStart\"](14,\"div\",7),m[\"\\u0275\\u0275elementStart\"](15,\"div\",8),m[\"\\u0275\\u0275elementStart\"](16,\"label\",11),m[\"\\u0275\\u0275text\"](17,\"Email\"),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275element\"](18,\"input\",12),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementStart\"](19,\"div\",1),m[\"\\u0275\\u0275elementStart\"](20,\"div\",7),m[\"\\u0275\\u0275elementStart\"](21,\"div\",8),m[\"\\u0275\\u0275elementStart\"](22,\"label\",9),m[\"\\u0275\\u0275text\"](23,\"First Name\"),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275element\"](24,\"input\",13),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementStart\"](25,\"div\",7),m[\"\\u0275\\u0275elementStart\"](26,\"div\",8),m[\"\\u0275\\u0275elementStart\"](27,\"label\",11),m[\"\\u0275\\u0275text\"](28,\"Last Name\"),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275element\"](29,\"input\",14),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementStart\"](30,\"div\",1),m[\"\\u0275\\u0275elementStart\"](31,\"div\",15),m[\"\\u0275\\u0275elementStart\"](32,\"button\",16),m[\"\\u0275\\u0275text\"](33),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"](),m[\"\\u0275\\u0275elementEnd\"]()),2&e&&(m[\"\\u0275\\u0275advance\"](7),m[\"\\u0275\\u0275property\"](\"formGroup\",t.generalForm),m[\"\\u0275\\u0275advance\"](26),m[\"\\u0275\\u0275textInterpolate\"](t.button_title))},directives:[s.q,s.g,s.d,s.a,s.f,s.c,s.m],styles:[\".pagecontainer[_ngcontent-%COMP%]{margin-top:30px}\"]}),e})()},{path:\"changepassword\",component:c}];let h=(()=>{class e{}return e.\\u0275mod=m[\"\\u0275\\u0275defineNgModule\"]({type:e}),e.\\u0275inj=m[\"\\u0275\\u0275defineInjector\"]({factory:function(t){return new(t||e)},imports:[[a.g.forChild(u)],a.g]}),e})();var p=r(\"QUrN\"),g=r(\"psEu\");let f=(()=>{class e{}return e.\\u0275mod=m[\"\\u0275\\u0275defineNgModule\"]({type:e}),e.\\u0275inj=m[\"\\u0275\\u0275defineInjector\"]({factory:function(t){return new(t||e)},imports:[[s.e,s.l,n.CommonModule,h,l.b,o.a,p.b.forRoot({relativeTimeThresholdOptions:{m:59}}),g.b]]}),e})()}}]);","name":"50.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[50],{\n\n/***/ \"02t3\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"SettingsModule\", function() { return /* binding */ settings_module_SettingsModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js\nvar dialog = __webpack_require__(\"0IaG\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./src/app/constants/config.ts\nvar config = __webpack_require__(\"E+pt\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js + 2 modules\nvar snack_bar = __webpack_require__(\"dNgK\");\n\n// EXTERNAL MODULE: ./src/app/services/user.service.ts + 1 modules\nvar user_service = __webpack_require__(\"qfBg\");\n\n// CONCATENATED MODULE: ./src/app/components/settings/changepassword/changepassword.component.ts\n\n\n\n\n\n\nlet changepassword_component_ChangepasswordComponent = /*@__PURE__*/ (() => {\n    class ChangepasswordComponent {\n        constructor(formbuilder, snackBar, userService) {\n            this.formbuilder = formbuilder;\n            this.snackBar = snackBar;\n            this.userService = userService;\n            this.button_title = \"Save\";\n            this.isAPILoading = false;\n            /**\n             * This is the function which used to get profile information of logged in user\n             */\n            this.getProfileInfo = () => {\n                this.userService.viewProfile(this.currentUser.user_id).subscribe(result => {\n                    var resulter = result;\n                    this.userInfo = resulter.result;\n                });\n            };\n            /**\n             * This is the function which used to change password through api\n             */\n            this.updateApi = (params) => {\n                this.isAPILoading = true;\n                this.userService.updateApi(params, this.currentUser.user_id).subscribe(result => {\n                    this.isAPILoading = false;\n                    if (result.status == true) {\n                        localStorage.setItem('token', result.return_id);\n                        this.snackBar.open('Password updated successfully', \"\", { duration: 2000 });\n                        location.href = config[\"a\" /* config */].base_url;\n                    }\n                    else {\n                        this.snackBar.open(result.message, \"\", { duration: 2000 });\n                    }\n                    this.button_title = \"Save\";\n                });\n            };\n            this.currentUser = this.userService.getUser();\n            this.passwordForm = formbuilder.group({\n                'password': [null, fesm2015_forms[\"o\" /* Validators */].compose([fesm2015_forms[\"o\" /* Validators */].required, fesm2015_forms[\"o\" /* Validators */].minLength(3), fesm2015_forms[\"o\" /* Validators */].maxLength(32)])],\n                'confirm_password': [null, fesm2015_forms[\"o\" /* Validators */].compose([fesm2015_forms[\"o\" /* Validators */].required, fesm2015_forms[\"o\" /* Validators */].minLength(3), fesm2015_forms[\"o\" /* Validators */].maxLength(32)])]\n            });\n            this.getProfileInfo();\n        }\n        ngOnInit() {\n        }\n        /**\n         * This is the function which used to change password with validation\n         */\n        onSubmit(formData) {\n            if (this.passwordForm.valid && this.button_title == \"Save\") {\n                if (formData.value.password != formData.value.confirm_password) {\n                    this.snackBar.open('Password Mismatch', \"\", { duration: 2000 });\n                    return;\n                }\n                this.button_title = \"Saving...\";\n                this.updateApi({\n                    password: formData.value.password,\n                });\n            }\n            else {\n                if (this.passwordForm.controls.password.invalid) {\n                    if (this.passwordForm.controls.password.errors) {\n                        if (this.passwordForm.controls.password.errors.required) {\n                            this.snackBar.open('Password is required', \"\", { duration: 2000 });\n                        }\n                        else if (this.passwordForm.controls.password.errors.minlength) {\n                            this.snackBar.open('Password required minimum 3 characters', \"\", { duration: 2000 });\n                        }\n                        else if (this.passwordForm.controls.password.errors.maxlength) {\n                            this.snackBar.open('Password required maximum 32 characters', \"\", { duration: 2000 });\n                        }\n                    }\n                }\n                else if (this.passwordForm.controls.confirm_password.invalid) {\n                    if (this.passwordForm.controls.confirm_password.errors) {\n                        if (this.passwordForm.controls.confirm_password.errors.required) {\n                            this.snackBar.open('Confirm Password is required', \"\", { duration: 2000 });\n                        }\n                        else if (this.passwordForm.controls.confirm_password.errors.minlength) {\n                            this.snackBar.open('Confirm Password required minimum 3 characters', \"\", { duration: 2000 });\n                        }\n                        else if (this.passwordForm.controls.confirm_password.errors.maxlength) {\n                            this.snackBar.open('Confirm Password required maximum 32 characters', \"\", { duration: 2000 });\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ChangepasswordComponent.ɵfac = function ChangepasswordComponent_Factory(t) { return new (t || ChangepasswordComponent)(core[\"ɵɵdirectiveInject\"](fesm2015_forms[\"b\" /* FormBuilder */]), core[\"ɵɵdirectiveInject\"](snack_bar[\"a\" /* MatSnackBar */]), core[\"ɵɵdirectiveInject\"](user_service[\"a\" /* UserService */])); };\n    ChangepasswordComponent.ɵcmp = core[\"ɵɵdefineComponent\"]({ type: ChangepasswordComponent, selectors: [[\"app-changepassword\"]], decls: 23, vars: 2, consts: [[1, \"pagecontainer\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-sm-6\"], [1, \"form-group\"], [\"for\", \"password\"], [\"type\", \"text\", \"placeholder\", \"Enter Password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"confirm_password\"], [\"type\", \"text\", \"placeholder\", \"Enter Confirm Password\", \"formControlName\", \"confirm_password\", \"required\", \"\", 1, \"form-control\"], [1, \"col-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"px-4\"]], template: function ChangepasswordComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"ɵɵelementStart\"](0, \"div\", 0);\n                core[\"ɵɵelementStart\"](1, \"div\", 1);\n                core[\"ɵɵelementStart\"](2, \"div\", 2);\n                core[\"ɵɵelementStart\"](3, \"div\", 3);\n                core[\"ɵɵelementStart\"](4, \"div\", 4);\n                core[\"ɵɵtext\"](5, \" Update Password \");\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementStart\"](6, \"div\", 5);\n                core[\"ɵɵelementStart\"](7, \"form\", 6);\n                core[\"ɵɵlistener\"](\"ngSubmit\", function ChangepasswordComponent_Template_form_ngSubmit_7_listener() { return ctx.onSubmit(ctx.passwordForm); });\n                core[\"ɵɵelementStart\"](8, \"div\", 1);\n                core[\"ɵɵelementStart\"](9, \"div\", 7);\n                core[\"ɵɵelementStart\"](10, \"div\", 8);\n                core[\"ɵɵelementStart\"](11, \"label\", 9);\n                core[\"ɵɵtext\"](12, \"Password\");\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelement\"](13, \"input\", 10);\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementStart\"](14, \"div\", 7);\n                core[\"ɵɵelementStart\"](15, \"div\", 8);\n                core[\"ɵɵelementStart\"](16, \"label\", 11);\n                core[\"ɵɵtext\"](17, \"Confirm Password\");\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelement\"](18, \"input\", 12);\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementStart\"](19, \"div\", 1);\n                core[\"ɵɵelementStart\"](20, \"div\", 13);\n                core[\"ɵɵelementStart\"](21, \"button\", 14);\n                core[\"ɵɵtext\"](22);\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n            }\n            if (rf & 2) {\n                core[\"ɵɵadvance\"](7);\n                core[\"ɵɵproperty\"](\"formGroup\", ctx.passwordForm);\n                core[\"ɵɵadvance\"](15);\n                core[\"ɵɵtextInterpolate\"](ctx.button_title);\n            }\n        }, directives: [fesm2015_forms[\"q\" /* ɵangular_packages_forms_forms_y */], fesm2015_forms[\"g\" /* NgControlStatusGroup */], fesm2015_forms[\"d\" /* FormGroupDirective */], fesm2015_forms[\"a\" /* DefaultValueAccessor */], fesm2015_forms[\"f\" /* NgControlStatus */], fesm2015_forms[\"c\" /* FormControlName */], fesm2015_forms[\"m\" /* RequiredValidator */]], styles: [\".pagecontainer[_ngcontent-%COMP%]{margin-top:30px}\"] });\n    return ChangepasswordComponent;\n})();\n\n// CONCATENATED MODULE: ./src/app/components/settings/general/general.component.ts\n\n\n\n\n\n\nlet general_component_GeneralComponent = /*@__PURE__*/ (() => {\n    class GeneralComponent {\n        constructor(formbuilder, snackBar, userService) {\n            this.formbuilder = formbuilder;\n            this.snackBar = snackBar;\n            this.userService = userService;\n            this.button_title = \"Save\";\n            this.isAPILoading = false;\n            /**\n             * This is the function which used to get profile information of logged in user\n             */\n            this.getProfileInfo = () => {\n                this.userService.viewProfile(this.currentUser.user_id).subscribe(result => {\n                    var resulter = result;\n                    this.userInfo = resulter.result;\n                    this.generalForm.controls.username.setValue(this.userInfo.username);\n                    this.generalForm.controls.email.setValue(this.userInfo.email);\n                    this.generalForm.controls.first_name.setValue(this.userInfo.first_name);\n                    this.generalForm.controls.last_name.setValue(this.userInfo.last_name);\n                });\n            };\n            /**\n             * This is the function which used update profile information through api\n             */\n            this.updateApi = (params) => {\n                this.isAPILoading = true;\n                this.userService.updateApi(params, this.currentUser.user_id).subscribe(result => {\n                    this.isAPILoading = false;\n                    if (result.status == true) {\n                        localStorage.setItem('token', result.return_id);\n                        this.snackBar.open('General settings updated successfully', \"\", { duration: 2000 });\n                        location.href = config[\"a\" /* config */].base_url;\n                    }\n                    else {\n                        this.snackBar.open(result.message, \"\", { duration: 2000 });\n                    }\n                    this.button_title = \"Save\";\n                });\n            };\n            this.currentUser = this.userService.getUser();\n            this.generalForm = formbuilder.group({\n                'username': [null, fesm2015_forms[\"o\" /* Validators */].compose([fesm2015_forms[\"o\" /* Validators */].required, fesm2015_forms[\"o\" /* Validators */].minLength(3), fesm2015_forms[\"o\" /* Validators */].maxLength(255)])],\n                'email': [null, fesm2015_forms[\"o\" /* Validators */].compose([fesm2015_forms[\"o\" /* Validators */].required, fesm2015_forms[\"o\" /* Validators */].minLength(3), fesm2015_forms[\"o\" /* Validators */].pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')])],\n                'first_name': [null, fesm2015_forms[\"o\" /* Validators */].compose([fesm2015_forms[\"o\" /* Validators */].required, fesm2015_forms[\"o\" /* Validators */].maxLength(32)])],\n                'last_name': [null, fesm2015_forms[\"o\" /* Validators */].compose([fesm2015_forms[\"o\" /* Validators */].required, fesm2015_forms[\"o\" /* Validators */].maxLength(32)])],\n            });\n            this.getProfileInfo();\n        }\n        ngOnInit() {\n        }\n        /**\n         * This is the function which used update profile information with validation\n         */\n        onSubmit(formData) {\n            if (this.generalForm.valid && this.button_title == \"Save\") {\n                this.button_title = \"Saving...\";\n                this.updateApi({\n                    username: formData.value.username,\n                    first_name: formData.value.first_name,\n                    last_name: formData.value.last_name,\n                    email: formData.value.email\n                });\n            }\n            else {\n                if (this.generalForm.controls.username.invalid) {\n                    if (this.generalForm.controls.username.errors) {\n                        if (this.generalForm.controls.username.errors.required) {\n                            this.snackBar.open('Username is required', \"\", { duration: 2000 });\n                        }\n                        else if (this.generalForm.controls.username.errors.minlength) {\n                            this.snackBar.open('Username required minimum 3 characters', \"\", { duration: 2000 });\n                        }\n                        else if (this.generalForm.controls.username.errors.maxlength) {\n                            this.snackBar.open('Username required maximum 255 characters', \"\", { duration: 2000 });\n                        }\n                    }\n                }\n                else if (this.generalForm.controls.email.invalid) {\n                    if (this.generalForm.controls.email.errors) {\n                        console.log(this.generalForm.controls.email.errors);\n                        if (this.generalForm.controls.email.errors.required) {\n                            this.snackBar.open('Email is required', \"\", { duration: 2000 });\n                        }\n                        else if (this.generalForm.controls.email.errors.minlength) {\n                            this.snackBar.open('Email required minimum 3 characters', \"\", { duration: 2000 });\n                        }\n                        else if (this.generalForm.controls.email.errors.pattern) {\n                            this.snackBar.open('Invalid Email', \"\", { duration: 2000 });\n                        }\n                    }\n                }\n                else if (this.generalForm.controls.first_name.invalid) {\n                    if (this.generalForm.controls.first_name.errors) {\n                        if (this.generalForm.controls.first_name.errors.required) {\n                            this.snackBar.open('First Name is required', \"\", { duration: 2000 });\n                        }\n                        else if (this.generalForm.controls.first_name.errors.minlength) {\n                            this.snackBar.open('First Name required minimum 3 characters', \"\", { duration: 2000 });\n                        }\n                        else if (this.generalForm.controls.first_name.errors.maxlength) {\n                            this.snackBar.open('First Name required maximum 32 characters', \"\", { duration: 2000 });\n                        }\n                    }\n                }\n                else if (this.generalForm.controls.last_name.invalid) {\n                    if (this.generalForm.controls.last_name.errors) {\n                        if (this.generalForm.controls.last_name.errors.required) {\n                            this.snackBar.open('Last Name is required', \"\", { duration: 2000 });\n                        }\n                        else if (this.generalForm.controls.last_name.errors.minlength) {\n                            this.snackBar.open('Last Name required minimum 3 characters', \"\", { duration: 2000 });\n                        }\n                        else if (this.generalForm.controls.last_name.errors.maxlength) {\n                            this.snackBar.open('Last Name required maximum 32 characters', \"\", { duration: 2000 });\n                        }\n                    }\n                }\n            }\n        }\n    }\n    GeneralComponent.ɵfac = function GeneralComponent_Factory(t) { return new (t || GeneralComponent)(core[\"ɵɵdirectiveInject\"](fesm2015_forms[\"b\" /* FormBuilder */]), core[\"ɵɵdirectiveInject\"](snack_bar[\"a\" /* MatSnackBar */]), core[\"ɵɵdirectiveInject\"](user_service[\"a\" /* UserService */])); };\n    GeneralComponent.ɵcmp = core[\"ɵɵdefineComponent\"]({ type: GeneralComponent, selectors: [[\"app-general\"]], decls: 34, vars: 2, consts: [[1, \"pagecontainer\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-sm-6\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"placeholder\", \"Enter User Name\", \"formControlName\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"text\", \"placeholder\", \"Enter User Name\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Enter First Name\", \"formControlName\", \"first_name\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Enter Last Name\", \"formControlName\", \"last_name\", \"required\", \"\", 1, \"form-control\"], [1, \"col-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"px-4\"]], template: function GeneralComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"ɵɵelementStart\"](0, \"div\", 0);\n                core[\"ɵɵelementStart\"](1, \"div\", 1);\n                core[\"ɵɵelementStart\"](2, \"div\", 2);\n                core[\"ɵɵelementStart\"](3, \"div\", 3);\n                core[\"ɵɵelementStart\"](4, \"div\", 4);\n                core[\"ɵɵtext\"](5, \" General Settings \");\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementStart\"](6, \"div\", 5);\n                core[\"ɵɵelementStart\"](7, \"form\", 6);\n                core[\"ɵɵlistener\"](\"ngSubmit\", function GeneralComponent_Template_form_ngSubmit_7_listener() { return ctx.onSubmit(ctx.generalForm); });\n                core[\"ɵɵelementStart\"](8, \"div\", 1);\n                core[\"ɵɵelementStart\"](9, \"div\", 7);\n                core[\"ɵɵelementStart\"](10, \"div\", 8);\n                core[\"ɵɵelementStart\"](11, \"label\", 9);\n                core[\"ɵɵtext\"](12, \"User Name\");\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelement\"](13, \"input\", 10);\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementStart\"](14, \"div\", 7);\n                core[\"ɵɵelementStart\"](15, \"div\", 8);\n                core[\"ɵɵelementStart\"](16, \"label\", 11);\n                core[\"ɵɵtext\"](17, \"Email\");\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelement\"](18, \"input\", 12);\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementStart\"](19, \"div\", 1);\n                core[\"ɵɵelementStart\"](20, \"div\", 7);\n                core[\"ɵɵelementStart\"](21, \"div\", 8);\n                core[\"ɵɵelementStart\"](22, \"label\", 9);\n                core[\"ɵɵtext\"](23, \"First Name\");\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelement\"](24, \"input\", 13);\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementStart\"](25, \"div\", 7);\n                core[\"ɵɵelementStart\"](26, \"div\", 8);\n                core[\"ɵɵelementStart\"](27, \"label\", 11);\n                core[\"ɵɵtext\"](28, \"Last Name\");\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelement\"](29, \"input\", 14);\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementStart\"](30, \"div\", 1);\n                core[\"ɵɵelementStart\"](31, \"div\", 15);\n                core[\"ɵɵelementStart\"](32, \"button\", 16);\n                core[\"ɵɵtext\"](33);\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n                core[\"ɵɵelementEnd\"]();\n            }\n            if (rf & 2) {\n                core[\"ɵɵadvance\"](7);\n                core[\"ɵɵproperty\"](\"formGroup\", ctx.generalForm);\n                core[\"ɵɵadvance\"](26);\n                core[\"ɵɵtextInterpolate\"](ctx.button_title);\n            }\n        }, directives: [fesm2015_forms[\"q\" /* ɵangular_packages_forms_forms_y */], fesm2015_forms[\"g\" /* NgControlStatusGroup */], fesm2015_forms[\"d\" /* FormGroupDirective */], fesm2015_forms[\"a\" /* DefaultValueAccessor */], fesm2015_forms[\"f\" /* NgControlStatus */], fesm2015_forms[\"c\" /* FormControlName */], fesm2015_forms[\"m\" /* RequiredValidator */]], styles: [\".pagecontainer[_ngcontent-%COMP%]{margin-top:30px}\"] });\n    return GeneralComponent;\n})();\n\n// CONCATENATED MODULE: ./src/app/components/settings/settings-routing.module.ts\n\n\n\n\n\nconst routes = [\n    {\n        path: '',\n        redirectTo: 'general',\n        pathMatch: 'full',\n    },\n    {\n        path: 'general',\n        component: general_component_GeneralComponent\n    },\n    {\n        path: 'changepassword',\n        component: changepassword_component_ChangepasswordComponent\n    }\n];\nlet settings_routing_module_SettingsRoutingModule = /*@__PURE__*/ (() => {\n    class SettingsRoutingModule {\n    }\n    SettingsRoutingModule.ɵmod = core[\"ɵɵdefineNgModule\"]({ type: SettingsRoutingModule });\n    SettingsRoutingModule.ɵinj = core[\"ɵɵdefineInjector\"]({ factory: function SettingsRoutingModule_Factory(t) { return new (t || SettingsRoutingModule)(); }, imports: [[router[\"g\" /* RouterModule */].forChild(routes)], router[\"g\" /* RouterModule */]] });\n    return SettingsRoutingModule;\n})();\n\n// EXTERNAL MODULE: ./node_modules/ngx-moment/__ivy_ngcc__/fesm2015/ngx-moment.js\nvar ngx_moment = __webpack_require__(\"QUrN\");\n\n// EXTERNAL MODULE: ./node_modules/ngx-bootstrap/__ivy_ngcc__/alert/fesm2015/ngx-bootstrap-alert.js\nvar ngx_bootstrap_alert = __webpack_require__(\"psEu\");\n\n// CONCATENATED MODULE: ./src/app/components/settings/settings.module.ts\n\n\n\n\n\n\n\n\n\nlet settings_module_SettingsModule = /*@__PURE__*/ (() => {\n    class SettingsModule {\n    }\n    SettingsModule.ɵmod = core[\"ɵɵdefineNgModule\"]({ type: SettingsModule });\n    SettingsModule.ɵinj = core[\"ɵɵdefineInjector\"]({ factory: function SettingsModule_Factory(t) { return new (t || SettingsModule)(); }, imports: [[\n                fesm2015_forms[\"e\" /* FormsModule */],\n                fesm2015_forms[\"l\" /* ReactiveFormsModule */],\n                common[\"CommonModule\"],\n                settings_routing_module_SettingsRoutingModule,\n                snack_bar[\"b\" /* MatSnackBarModule */],\n                dialog[\"a\" /* MatDialogModule */],\n                ngx_moment[\"b\" /* MomentModule */].forRoot({\n                    relativeTimeThresholdOptions: {\n                        'm': 59\n                    }\n                }),\n                ngx_bootstrap_alert[\"b\" /* AlertModule */]\n            ]] });\n    return SettingsModule;\n})();\n\n\n/***/ })\n\n}]);","inputSourceMap":null}